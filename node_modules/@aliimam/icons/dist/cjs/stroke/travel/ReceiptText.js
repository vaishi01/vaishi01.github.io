"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReceiptText = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.ReceiptText = React.forwardRef(function ReceiptText({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M13 16H8M14 8H8M16 12H8M4 3C4 2.735 4.105 2.48 4.293 2.293 4.48 2.105 4.735 2 5 2 5.248 1.999 5.49 2.068 5.7 2.2L6.633 2.8C6.842 2.934 7.085 3.005 7.333 3.005 7.581 3.005 7.824 2.934 8.033 2.8L8.967 2.2C9.176 2.066 9.419 1.995 9.667 1.995 9.915 1.995 10.158 2.066 10.367 2.2L11.3 2.8C11.509 2.934 11.752 3.005 12 3.005 12.248 3.005 12.491 2.934 12.7 2.8L13.633 2.2C13.842 2.066 14.085 1.995 14.333 1.995 14.581 1.995 14.824 2.066 15.033 2.2L15.967 2.8C16.176 2.934 16.419 3.005 16.667 3.005 16.915 3.005 17.158 2.934 17.367 2.8L18.3 2.2C18.51 2.068 18.752 1.999 19 2 19.265 2 19.52 2.105 19.707 2.293 19.895 2.48 20 2.735 20 3V21C20 21.265 19.895 21.52 19.707 21.707 19.52 21.895 19.265 22 19 22 18.752 22.001 18.51 21.932 18.3 21.8L17.367 21.2C17.158 21.066 16.915 20.995 16.667 20.995 16.419 20.995 16.176 21.066 15.967 21.2L15.033 21.8C14.824 21.934 14.581 22.005 14.333 22.005 14.085 22.005 13.842 21.934 13.633 21.8L12.7 21.2C12.491 21.066 12.248 20.995 12 20.995 11.752 20.995 11.509 21.066 11.3 21.2L10.367 21.8C10.158 21.934 9.915 22.005 9.667 22.005 9.419 22.005 9.176 21.934 8.967 21.8L8.033 21.2C7.824 21.066 7.581 20.995 7.333 20.995 7.085 20.995 6.842 21.066 6.633 21.2L5.7 21.8C5.49 21.932 5.248 22.001 5 22 4.735 22 4.48 21.895 4.293 21.707 4.105 21.52 4 21.265 4 21V3Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M13 16H8M14 8H8M16 12H8M4 3C4 2.735 4.105 2.48 4.293 2.293 4.48 2.105 4.735 2 5 2 5.248 1.999 5.49 2.068 5.7 2.2L6.633 2.8C6.842 2.934 7.085 3.005 7.333 3.005 7.581 3.005 7.824 2.934 8.033 2.8L8.967 2.2C9.176 2.066 9.419 1.995 9.667 1.995 9.915 1.995 10.158 2.066 10.367 2.2L11.3 2.8C11.509 2.934 11.752 3.005 12 3.005 12.248 3.005 12.491 2.934 12.7 2.8L13.633 2.2C13.842 2.066 14.085 1.995 14.333 1.995 14.581 1.995 14.824 2.066 15.033 2.2L15.967 2.8C16.176 2.934 16.419 3.005 16.667 3.005 16.915 3.005 17.158 2.934 17.367 2.8L18.3 2.2C18.51 2.068 18.752 1.999 19 2 19.265 2 19.52 2.105 19.707 2.293 19.895 2.48 20 2.735 20 3V21C20 21.265 19.895 21.52 19.707 21.707 19.52 21.895 19.265 22 19 22 18.752 22.001 18.51 21.932 18.3 21.8L17.367 21.2C17.158 21.066 16.915 20.996 16.667 20.996 16.419 20.996 16.176 21.066 15.967 21.2L15.033 21.8C14.824 21.934 14.581 22.005 14.333 22.005 14.085 22.005 13.842 21.934 13.633 21.8L12.7 21.2C12.491 21.066 12.248 20.996 12 20.996 11.752 20.996 11.509 21.066 11.3 21.2L10.367 21.8C10.158 21.934 9.915 22.005 9.667 22.005 9.419 22.005 9.176 21.934 8.967 21.8L8.033 21.2C7.824 21.066 7.581 20.996 7.333 20.996 7.085 20.996 6.842 21.066 6.633 21.2L5.7 21.8C5.49 21.932 5.248 22.001 5 22 4.735 22 4.48 21.895 4.293 21.707 4.105 21.52 4 21.265 4 21V3Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`ReceiptText doesn't support ${type}`);
    return null;
});
exports.ReceiptText.displayName = "ReceiptText";
exports.ReceiptText.metadata = {
    name: "ReceiptText",
    category: "stroke/travel",
    tags: ["receipt", "text", "icon"],
    description: "ReceiptText icon from stroke/travel category",
    type: ["stroke", "icon"],
};
exports.default = exports.ReceiptText;
