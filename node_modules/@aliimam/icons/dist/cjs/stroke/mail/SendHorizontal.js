"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SendHorizontal = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.SendHorizontal = React.forwardRef(function SendHorizontal({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M3.714 3.048C3.624 3.004 3.523 2.988 3.424 3.003 3.325 3.017 3.233 3.061 3.159 3.129 3.085 3.196 3.033 3.285 3.011 3.382 2.988 3.48 2.995 3.582 3.031 3.675L5.874 11.302C6.042 11.752 6.042 12.248 5.874 12.698L3.032 20.325C2.996 20.418 2.989 20.52 3.012 20.617 3.035 20.715 3.086 20.803 3.16 20.871 3.233 20.938 3.325 20.982 3.424 20.997 3.523 21.011 3.624 20.996 3.714 20.952L21.714 12.452C21.8 12.412 21.872 12.348 21.923 12.268 21.973 12.188 22 12.095 22 12 22 11.905 21.973 11.813 21.923 11.733 21.872 11.653 21.8 11.589 21.714 11.548L3.714 3.048ZM6 12H22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M3.714 3.048C3.624 3.004 3.523 2.988 3.424 3.003 3.325 3.017 3.233 3.061 3.159 3.129 3.085 3.196 3.033 3.285 3.011 3.382 2.988 3.48 2.995 3.582 3.031 3.675L5.874 11.302C6.042 11.752 6.042 12.248 5.874 12.698L3.032 20.325C2.996 20.418 2.989 20.52 3.012 20.617 3.035 20.715 3.086 20.803 3.16 20.871 3.233 20.938 3.325 20.982 3.424 20.997 3.523 21.011 3.624 20.996 3.714 20.952L21.714 12.452C21.8 12.412 21.872 12.348 21.923 12.268 21.973 12.188 22 12.095 22 12 22 11.905 21.973 11.813 21.923 11.733 21.872 11.653 21.8 11.589 21.714 11.548L3.714 3.048ZM6 12H22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M3.714 3.048C3.624 3.004 3.523 2.988 3.424 3.003 3.325 3.017 3.233 3.061 3.159 3.129 3.085 3.196 3.033 3.285 3.011 3.382 2.988 3.48 2.995 3.582 3.031 3.675L5.874 11.302C6.042 11.752 6.042 12.248 5.874 12.698L3.032 20.325C2.996 20.418 2.989 20.52 3.012 20.617 3.035 20.715 3.086 20.803 3.16 20.871 3.233 20.938 3.325 20.982 3.424 20.997 3.523 21.011 3.624 20.996 3.714 20.952L21.714 12.452C21.8 12.412 21.872 12.348 21.923 12.268 21.973 12.188 22 12.095 22 12 22 11.905 21.973 11.813 21.923 11.733 21.872 11.653 21.8 11.589 21.714 11.548L3.714 3.048ZM6 12H22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`SendHorizontal doesn't support ${type}`);
    return null;
});
exports.SendHorizontal.displayName = "SendHorizontal";
exports.SendHorizontal.metadata = {
    name: "SendHorizontal",
    category: "stroke/mail",
    tags: ["send", "horizontal", "icon"],
    description: "SendHorizontal icon from stroke/mail category",
    type: ["stroke", "icon"],
};
exports.default = exports.SendHorizontal;
