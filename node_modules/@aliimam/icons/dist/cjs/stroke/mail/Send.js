"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Send = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Send = React.forwardRef(function Send({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M14.536 21.686C14.574 21.781 14.64 21.862 14.725 21.918 14.811 21.974 14.911 22.002 15.013 22 15.115 21.997 15.214 21.963 15.296 21.903 15.378 21.843 15.44 21.759 15.473 21.662L21.973 2.662C22.005 2.573 22.011 2.478 21.991 2.386 21.97 2.294 21.924 2.209 21.857 2.143 21.791 2.076 21.706 2.03 21.615 2.009 21.523 1.989 21.427 1.995 21.338 2.027L2.338 8.527C2.242 8.56 2.157 8.622 2.097 8.704 2.037 8.786 2.003 8.885 2 8.987 1.998 9.089 2.026 9.189 2.083 9.275 2.139 9.36 2.219 9.426 2.314 9.464L10.244 12.644C10.495 12.744 10.723 12.895 10.914 13.085 11.105 13.276 11.255 13.504 11.356 13.754L14.536 21.686ZM21.854 2.147 10.914 13.086", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M14.536 21.686C14.574 21.781 14.64 21.862 14.725 21.918 14.811 21.974 14.911 22.002 15.013 22 15.115 21.997 15.214 21.963 15.296 21.903 15.378 21.843 15.44 21.759 15.473 21.662L21.973 2.662C22.005 2.573 22.011 2.478 21.991 2.386 21.97 2.294 21.924 2.209 21.857 2.143 21.791 2.076 21.706 2.03 21.615 2.009 21.523 1.989 21.427 1.995 21.338 2.027L2.338 8.527C2.242 8.56 2.157 8.622 2.097 8.704 2.037 8.786 2.003 8.885 2 8.987 1.998 9.089 2.026 9.19 2.083 9.275 2.139 9.36 2.219 9.426 2.314 9.464L10.244 12.644C10.495 12.744 10.723 12.895 10.914 13.085 11.105 13.276 11.255 13.504 11.356 13.754L14.536 21.686ZM21.854 2.147 10.914 13.086", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M14.536 21.686C14.574 21.781 14.64 21.862 14.725 21.918 14.811 21.974 14.911 22.002 15.013 22 15.115 21.997 15.214 21.963 15.296 21.903 15.378 21.843 15.44 21.759 15.473 21.662L21.973 2.662C22.005 2.573 22.011 2.478 21.991 2.386 21.97 2.294 21.924 2.209 21.857 2.143 21.791 2.076 21.706 2.03 21.615 2.009 21.523 1.989 21.427 1.995 21.338 2.027L2.338 8.527C2.242 8.56 2.157 8.622 2.097 8.704 2.037 8.786 2.003 8.885 2 8.987 1.998 9.089 2.026 9.19 2.083 9.275 2.139 9.36 2.219 9.426 2.314 9.464L10.244 12.644C10.495 12.744 10.723 12.895 10.914 13.085 11.105 13.276 11.255 13.504 11.356 13.754L14.536 21.686ZM21.854 2.147 10.914 13.086", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`Send doesn't support ${type}`);
    return null;
});
exports.Send.displayName = "Send";
exports.Send.metadata = {
    name: "Send",
    category: "stroke/mail",
    tags: ["send", "icon"],
    description: "Send icon from stroke/mail category",
    type: ["stroke", "icon"],
};
exports.default = exports.Send;
