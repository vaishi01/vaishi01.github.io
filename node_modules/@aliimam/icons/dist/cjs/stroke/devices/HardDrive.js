"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HardDrive = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.HardDrive = React.forwardRef(function HardDrive({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M22 12H2M5.45 5.11 2 12V18C2 18.53 2.211 19.039 2.586 19.414 2.961 19.789 3.47 20 4 20H20C20.53 20 21.039 19.789 21.414 19.414 21.789 19.039 22 18.53 22 18V12L18.55 5.11C18.384 4.777 18.129 4.496 17.813 4.3 17.497 4.104 17.132 4 16.76 4H7.24C6.868 4 6.503 4.104 6.187 4.3 5.871 4.496 5.616 4.777 5.45 5.11ZM6 16H6.01M10 16H10.01", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M22 12H2M5.45 5.11 2 12V18C2 18.53 2.211 19.039 2.586 19.414 2.961 19.789 3.47 20 4 20H20C20.53 20 21.039 19.789 21.414 19.414 21.789 19.039 22 18.53 22 18V12L18.55 5.11C18.384 4.777 18.129 4.496 17.813 4.3 17.497 4.104 17.132 4 16.76 4H7.24C6.868 4 6.503 4.104 6.187 4.3 5.871 4.496 5.616 4.777 5.45 5.11ZM6 16H6.01M10 16H10.01", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`HardDrive doesn't support ${type}`);
    return null;
});
exports.HardDrive.displayName = "HardDrive";
exports.HardDrive.metadata = {
    name: "HardDrive",
    category: "stroke/devices",
    tags: ["hard", "drive", "icon"],
    description: "HardDrive icon from stroke/devices category",
    type: ["stroke", "icon"],
};
exports.default = exports.HardDrive;
