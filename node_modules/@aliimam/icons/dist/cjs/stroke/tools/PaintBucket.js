"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaintBucket = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.PaintBucket = React.forwardRef(function PaintBucket({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M19 11 11 3 2.4 11.6C2.033 11.974 1.828 12.477 1.828 13 1.828 13.524 2.033 14.026 2.4 14.4L7.6 19.6C8.4 20.4 9.6 20.4 10.4 19.6L19 11ZM5 2 10 7M2 13H17M22 20C22 20.53 21.789 21.039 21.414 21.414 21.039 21.789 20.53 22 20 22 19.47 22 18.961 21.789 18.586 21.414 18.211 21.039 18 20.53 18 20 18 18.4 19.7 17.6 20 16 20.3 17.6 22 18.4 22 20Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M19 11 11 3 2.4 11.6C2.034 11.974 1.828 12.477 1.828 13 1.828 13.524 2.034 14.026 2.4 14.4L7.6 19.6C8.4 20.4 9.6 20.4 10.4 19.6L19 11ZM5 2 10 7M2 13H17M22 20C22 20.53 21.789 21.039 21.414 21.414 21.039 21.789 20.53 22 20 22 19.47 22 18.961 21.789 18.586 21.414 18.211 21.039 18 20.53 18 20 18 18.4 19.7 17.6 20 16 20.3 17.6 22 18.4 22 20Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`PaintBucket doesn't support ${type}`);
    return null;
});
exports.PaintBucket.displayName = "PaintBucket";
exports.PaintBucket.metadata = {
    name: "PaintBucket",
    category: "stroke/tools",
    tags: ["paint", "bucket", "icon"],
    description: "PaintBucket icon from stroke/tools category",
    type: ["stroke", "icon"],
};
exports.default = exports.PaintBucket;
