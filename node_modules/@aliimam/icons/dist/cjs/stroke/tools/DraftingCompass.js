"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DraftingCompass = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.DraftingCompass = React.forwardRef(function DraftingCompass({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12.99 6.74 14.92 10.18M19.136 12C18.205 12.948 17.095 13.701 15.87 14.215 14.645 14.729 13.329 14.994 12.001 14.994 10.672 14.994 9.357 14.729 8.132 14.215 6.907 13.701 5.796 12.948 4.865 12M21 21 18.84 17.16M3 21 11.02 6.74M12 7C13.105 7 14 6.105 14 5 14 3.895 13.105 3 12 3 10.895 3 10 3.895 10 5 10 6.105 10.895 7 12 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12.99 6.74 14.92 10.18M19.136 12C18.205 12.948 17.095 13.701 15.87 14.215 14.644 14.729 13.329 14.994 12.001 14.994 10.672 14.994 9.357 14.729 8.131 14.215 6.906 13.701 5.796 12.948 4.865 12M21 21 18.84 17.16M3 21 11.02 6.74M12 7C13.105 7 14 6.105 14 5 14 3.895 13.105 3 12 3 10.895 3 10 3.895 10 5 10 6.105 10.895 7 12 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12.99 6.74 14.92 10.18M19.136 12C18.205 12.948 17.095 13.701 15.87 14.215 14.644 14.729 13.329 14.994 12.001 14.994 10.672 14.994 9.357 14.729 8.131 14.215 6.906 13.701 5.796 12.948 4.865 12M21 21 18.84 17.16M3 21 11.02 6.74M12 7C13.105 7 14 6.105 14 5 14 3.895 13.105 3 12 3 10.895 3 10 3.895 10 5 10 6.105 10.895 7 12 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`DraftingCompass doesn't support ${type}`);
    return null;
});
exports.DraftingCompass.displayName = "DraftingCompass";
exports.DraftingCompass.metadata = {
    name: "DraftingCompass",
    category: "stroke/tools",
    tags: ["drafting", "compass", "icon"],
    description: "DraftingCompass icon from stroke/tools category",
    type: ["stroke", "icon"],
};
exports.default = exports.DraftingCompass;
