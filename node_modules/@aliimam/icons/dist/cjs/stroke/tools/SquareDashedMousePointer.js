"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SquareDashedMousePointer = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.SquareDashedMousePointer = React.forwardRef(function SquareDashedMousePointer({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12.034 12.681C11.998 12.591 11.989 12.492 12.009 12.396 12.028 12.301 12.076 12.213 12.144 12.145 12.213 12.076 12.301 12.029 12.396 12.009 12.492 11.989 12.591 11.998 12.681 12.034L21.681 15.534C21.777 15.572 21.86 15.638 21.917 15.725 21.974 15.812 22.002 15.914 21.999 16.017 21.995 16.121 21.959 16.221 21.897 16.303 21.834 16.385 21.747 16.446 21.648 16.477L18.204 17.545C18.049 17.593 17.907 17.678 17.792 17.793 17.677 17.908 17.592 18.05 17.544 18.205L16.477 21.648C16.446 21.747 16.385 21.834 16.303 21.897 16.221 21.959 16.121 21.995 16.017 21.999 15.914 22.002 15.812 21.974 15.725 21.917 15.638 21.86 15.572 21.778 15.534 21.681L12.034 12.681ZM5 3C4.47 3 3.961 3.211 3.586 3.586 3.211 3.961 3 4.47 3 5M19 3C19.53 3 20.039 3.211 20.414 3.586 20.789 3.961 21 4.47 21 5M5 21C4.47 21 3.961 20.789 3.586 20.414 3.211 20.039 3 19.53 3 19M9 3H10M9 21H11M14 3H15M3 9V10M21 9V11M3 14V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12.034 12.681C11.998 12.591 11.989 12.492 12.009 12.396 12.028 12.301 12.076 12.213 12.144 12.145 12.213 12.076 12.301 12.029 12.396 12.009 12.492 11.989 12.591 11.998 12.681 12.034L21.681 15.534C21.777 15.572 21.86 15.639 21.917 15.725 21.974 15.812 22.002 15.914 21.999 16.017 21.995 16.121 21.959 16.221 21.897 16.303 21.834 16.385 21.747 16.446 21.648 16.477L18.204 17.545C18.049 17.593 17.907 17.678 17.792 17.793 17.677 17.908 17.592 18.05 17.544 18.205L16.477 21.648C16.446 21.747 16.385 21.834 16.303 21.897 16.221 21.96 16.121 21.995 16.017 21.999 15.914 22.002 15.812 21.974 15.725 21.917 15.638 21.86 15.572 21.778 15.534 21.681L12.034 12.681ZM5 3C4.47 3 3.961 3.211 3.586 3.586 3.211 3.961 3 4.47 3 5M19 3C19.53 3 20.039 3.211 20.414 3.586 20.789 3.961 21 4.47 21 5M5 21C4.47 21 3.961 20.789 3.586 20.414 3.211 20.039 3 19.53 3 19M9 3H10M9 21H11M14 3H15M3 9V10M21 9V11M3 14V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12.034 12.681C11.998 12.591 11.989 12.492 12.009 12.396 12.029 12.301 12.076 12.213 12.145 12.145 12.213 12.076 12.301 12.029 12.396 12.009 12.492 11.989 12.591 11.998 12.681 12.034L21.681 15.534C21.778 15.572 21.86 15.639 21.917 15.725 21.974 15.812 22.002 15.914 21.999 16.017 21.995 16.121 21.959 16.221 21.897 16.303 21.834 16.385 21.747 16.446 21.648 16.477L18.204 17.545C18.049 17.593 17.907 17.678 17.792 17.793 17.677 17.908 17.592 18.05 17.544 18.205L16.477 21.648C16.446 21.747 16.385 21.834 16.303 21.897 16.221 21.96 16.121 21.995 16.017 21.999 15.914 22.002 15.812 21.974 15.725 21.917 15.638 21.86 15.572 21.778 15.534 21.681L12.034 12.681ZM5 3C4.47 3 3.961 3.211 3.586 3.586 3.211 3.961 3 4.47 3 5M19 3C19.53 3 20.039 3.211 20.414 3.586 20.789 3.961 21 4.47 21 5M5 21C4.47 21 3.961 20.789 3.586 20.414 3.211 20.039 3 19.53 3 19M9 3H10M9 21H11M14 3H15M3 9V10M21 9V11M3 14V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`SquareDashedMousePointer doesn't support ${type}`);
    return null;
});
exports.SquareDashedMousePointer.displayName = "SquareDashedMousePointer";
exports.SquareDashedMousePointer.metadata = {
    name: "SquareDashedMousePointer",
    category: "stroke/tools",
    tags: ["square", "dashed", "mouse", "pointer", "icon"],
    description: "SquareDashedMousePointer icon from stroke/tools category",
    type: ["stroke", "icon"],
};
exports.default = exports.SquareDashedMousePointer;
