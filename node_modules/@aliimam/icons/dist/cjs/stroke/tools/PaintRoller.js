"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaintRoller = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.PaintRoller = React.forwardRef(function PaintRoller({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M16 2H4C2.89543 2 2 2.89543 2 4V6C2 7.10457 2.89543 8 4 8H16C17.1046 8 18 7.10457 18 6V4C18 2.89543 17.1046 2 16 2Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 16V14C10 13.47 10.211 12.961 10.586 12.586 10.961 12.211 11.47 12 12 12H20C20.53 12 21.039 11.789 21.414 11.414 21.789 11.039 22 10.53 22 10V7C22 6.47 21.789 5.961 21.414 5.586 21.039 5.211 20.53 5 20 5H18M11 16H9C8.448 16 8 16.448 8 17V21C8 21.552 8.448 22 9 22H11C11.552 22 12 21.552 12 21V17C12 16.448 11.552 16 11 16Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M16 2H4C2.89543 2 2 2.89543 2 4V6C2 7.10457 2.89543 8 4 8H16C17.1046 8 18 7.10457 18 6V4C18 2.89543 17.1046 2 16 2Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 16V14C10 13.47 10.211 12.961 10.586 12.586 10.961 12.211 11.47 12 12 12H20C20.53 12 21.039 11.789 21.414 11.414 21.789 11.039 22 10.53 22 10V7C22 6.47 21.789 5.961 21.414 5.586 21.039 5.211 20.53 5 20 5H18M11 16H9C8.448 16 8 16.448 8 17V21C8 21.552 8.448 22 9 22H11C11.552 22 12 21.552 12 21V17C12 16.448 11.552 16 11 16Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M16 2H4C2.89543 2 2 2.89543 2 4V6C2 7.10457 2.89543 8 4 8H16C17.1046 8 18 7.10457 18 6V4C18 2.89543 17.1046 2 16 2Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 16V14C10 13.47 10.211 12.961 10.586 12.586 10.961 12.211 11.47 12 12 12H20C20.53 12 21.039 11.789 21.414 11.414 21.789 11.039 22 10.53 22 10V7C22 6.47 21.789 5.961 21.414 5.586 21.039 5.211 20.53 5 20 5H18M11 16H9C8.448 16 8 16.448 8 17V21C8 21.552 8.448 22 9 22H11C11.552 22 12 21.552 12 21V17C12 16.448 11.552 16 11 16Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M16 2H4C2.89543 2 2 2.89543 2 4V6C2 7.10457 2.89543 8 4 8H16C17.1046 8 18 7.10457 18 6V4C18 2.89543 17.1046 2 16 2Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 16V14C10 13.47 10.211 12.961 10.586 12.586 10.961 12.211 11.47 12 12 12H20C20.53 12 21.039 11.789 21.414 11.414 21.789 11.039 22 10.53 22 10V7C22 6.47 21.789 5.961 21.414 5.586 21.039 5.211 20.53 5 20 5H18M11 16H9C8.448 16 8 16.448 8 17V21C8 21.552 8.448 22 9 22H11C11.552 22 12 21.552 12 21V17C12 16.448 11.552 16 11 16Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`PaintRoller doesn't support ${type}`);
    return null;
});
exports.PaintRoller.displayName = "PaintRoller";
exports.PaintRoller.metadata = {
    name: "PaintRoller",
    category: "stroke/tools",
    tags: ["paint", "roller", "icon"],
    description: "PaintRoller icon from stroke/tools category",
    type: ["stroke", "icon"],
};
exports.default = exports.PaintRoller;
