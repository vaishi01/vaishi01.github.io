"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrainFrontTunnel = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.TrainFrontTunnel = React.forwardRef(function TrainFrontTunnel({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M2 22V12C2 9.34784 3.05357 6.8043 4.92893 4.92893C6.8043 3.05357 9.34784 2 12 2C14.6522 2 17.1957 3.05357 19.0711 4.92893C20.9464 6.8043 22 9.34784 22 12V22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M15 6.8V8.2C15 8.943 14.684 9.655 14.121 10.18 13.559 10.705 12.796 11 12 11 11.204 11 10.441 10.705 9.879 10.18 9.316 9.655 9 8.943 9 8.2V6.8M10 15H10.01M14 15H14.01", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 19C8.939 19 7.922 18.579 7.172 17.828 6.421 17.078 6 16.061 6 15V12C6 10.409 6.632 8.883 7.757 7.757 8.883 6.632 10.409 6 12 6 13.591 6 15.117 6.632 16.243 7.757 17.368 8.883 18 10.409 18 12V15C18 16.061 17.579 17.078 16.828 17.828 16.078 18.579 15.061 19 14 19H10ZM9 19 7 22M15 19 17 22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M2 22V12C2 9.34784 3.05357 6.8043 4.92893 4.92893C6.8043 3.05357 9.34784 2 12 2C14.6522 2 17.1957 3.05357 19.0711 4.92893C20.9464 6.8043 22 9.34784 22 12V22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M15 6.8V8.2C15 8.943 14.684 9.655 14.121 10.18 13.559 10.705 12.796 11 12 11 11.204 11 10.441 10.705 9.879 10.18 9.316 9.655 9 8.943 9 8.2V6.8M10 15H10.01M14 15H14.01", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 19C8.939 19 7.922 18.579 7.172 17.828 6.421 17.078 6 16.061 6 15V12C6 10.409 6.632 8.883 7.757 7.757 8.883 6.632 10.409 6 12 6 13.591 6 15.117 6.632 16.243 7.757 17.368 8.883 18 10.409 18 12V15C18 16.061 17.579 17.078 16.828 17.828 16.078 18.579 15.061 19 14 19H10ZM9 19 7 22M15 19 17 22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`TrainFrontTunnel doesn't support ${type}`);
    return null;
});
exports.TrainFrontTunnel.displayName = "TrainFrontTunnel";
exports.TrainFrontTunnel.metadata = {
    name: "TrainFrontTunnel",
    category: "stroke/transportation",
    tags: ["train", "front", "tunnel", "icon"],
    description: "TrainFrontTunnel icon from stroke/transportation category",
    type: ["stroke", "icon"],
};
exports.default = exports.TrainFrontTunnel;
