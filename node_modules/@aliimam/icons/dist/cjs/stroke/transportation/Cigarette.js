"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cigarette = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Cigarette = React.forwardRef(function Cigarette({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 12H3C2.735 12 2.48 12.105 2.293 12.293 2.105 12.48 2 12.735 2 13V15C2 15.265 2.105 15.52 2.293 15.707 2.48 15.895 2.735 16 3 16H17M18 8C18 5.5 16 5.5 16 3M21 16C21.265 16 21.52 15.895 21.707 15.707 21.895 15.52 22 15.265 22 15V13C22 12.735 21.895 12.48 21.707 12.293 21.52 12.105 21.265 12 21 12M22 8C22 5.5 20 5.5 20 3M7 12V16", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 12H3C2.735 12 2.48 12.105 2.293 12.293 2.105 12.48 2 12.735 2 13V15C2 15.265 2.105 15.52 2.293 15.707 2.48 15.895 2.735 16 3 16H17M18 8C18 5.5 16 5.5 16 3M21 16C21.265 16 21.52 15.895 21.707 15.707 21.895 15.52 22 15.265 22 15V13C22 12.735 21.895 12.48 21.707 12.293 21.52 12.105 21.265 12 21 12M22 8C22 5.5 20 5.5 20 3M7 12V16", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 12H3C2.735 12 2.48 12.105 2.293 12.293 2.105 12.48 2 12.735 2 13V15C2 15.265 2.105 15.52 2.293 15.707 2.48 15.895 2.735 16 3 16H17M18 8C18 5.5 16 5.5 16 3M21 16C21.265 16 21.52 15.895 21.707 15.707 21.895 15.52 22 15.265 22 15V13C22 12.735 21.895 12.48 21.707 12.293 21.52 12.105 21.265 12 21 12M22 8C22 5.5 20 5.5 20 3M7 12V16", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`Cigarette doesn't support ${type}`);
    return null;
});
exports.Cigarette.displayName = "Cigarette";
exports.Cigarette.metadata = {
    name: "Cigarette",
    category: "stroke/transportation",
    tags: ["cigarette", "icon"],
    description: "Cigarette icon from stroke/transportation category",
    type: ["stroke", "icon"],
};
exports.default = exports.Cigarette;
