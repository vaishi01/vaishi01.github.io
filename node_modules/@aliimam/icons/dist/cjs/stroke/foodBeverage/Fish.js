"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fish = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Fish = React.forwardRef(function Fish({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M6.5 12C7.44 8.54 11.44 6 15 6 18.56 6 21.06 8.54 22 12 21.06 15.47 18.56 18 15 18 11.44 18 7.44 15.47 6.5 12ZM18 12V12.5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M16 17.93C14.699 16.227 13.995 14.143 13.995 12 13.995 9.857 14.699 7.773 16 6.07M7 10.67C7 8 5.58 5.97 2.73 5.5 1.73 7 1.73 10.5 2.96 12 1.72 13.5 1.72 17 2.73 18.5 5.58 18.03 7 16 7 13.33", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10.46 7.26C10.2 5.88 9.17 4.24 8 3H13.8C14.275 2.998 14.734 3.165 15.097 3.471 15.46 3.777 15.702 4.202 15.78 4.67L16.01 6.07M16.01 17.93 15.78 19.33C15.702 19.798 15.46 20.223 15.097 20.529 14.734 20.835 14.275 21.002 13.8 21H9.5C10.469 19.902 10.999 18.485 10.99 17.02", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M6.5 12C7.44 8.54 11.44 6 15 6 18.56 6 21.06 8.54 22 12 21.06 15.47 18.56 18 15 18 11.44 18 7.44 15.47 6.5 12ZM18 12V12.5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M16 17.93C14.699 16.227 13.995 14.143 13.995 12 13.995 9.857 14.699 7.773 16 6.07M7 10.67C7 8 5.58 5.97 2.73 5.5 1.73 7 1.73 10.5 2.96 12 1.72 13.5 1.72 17 2.73 18.5 5.58 18.03 7 16 7 13.33", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10.46 7.26C10.2 5.88 9.17 4.24 8 3H13.8C14.275 2.998 14.734 3.165 15.097 3.471 15.46 3.777 15.702 4.202 15.78 4.67L16.01 6.07M16.01 17.93 15.78 19.33C15.702 19.798 15.46 20.223 15.097 20.529 14.734 20.835 14.275 21.002 13.8 21H9.5C10.469 19.902 10.999 18.485 10.99 17.02", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`Fish doesn't support ${type}`);
    return null;
});
exports.Fish.displayName = "Fish";
exports.Fish.metadata = {
    name: "Fish",
    category: "stroke/foodBeverage",
    tags: ["fish", "icon"],
    description: "Fish icon from stroke/foodBeverage category",
    type: ["stroke", "icon"],
};
exports.default = exports.Fish;
