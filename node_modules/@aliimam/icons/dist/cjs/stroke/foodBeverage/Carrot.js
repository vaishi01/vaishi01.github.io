"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Carrot = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Carrot = React.forwardRef(function Carrot({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, ...props }, forwardedRef) {
    return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M8.64002 14L6.59002 11.96M15.34 15L12.88 12.54M2.27002 21.7C2.27002 21.7 12.14 18.2 15 15.34C15.4183 14.9224 15.7502 14.4265 15.9768 13.8807C16.2034 13.3348 16.3203 12.7496 16.3208 12.1586C16.3212 11.5675 16.2053 10.9822 15.9795 10.4359C15.7538 9.88971 15.4226 9.39329 15.005 8.97503C14.5874 8.55677 14.0915 8.22486 13.5456 7.99825C12.9998 7.77164 12.4146 7.65476 11.8236 7.6543C11.2325 7.65383 10.6472 7.76979 10.1009 7.99554C9.5547 8.2213 9.05828 8.55243 8.64002 8.97003C5.77002 11.84 2.27002 21.7 2.27002 21.7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M22 9C22 9 20.67 7 18.5 7C16.86 7 15 9 15 9C15 9 16.33 11 18.5 11C20.67 11 22 9 22 9Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M15 2C15 2 13 3.33 13 5.5C13 7.67 15 9 15 9C15 9 17 7.16 17 5.5C17 3.33 15 2 15 2Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
});
exports.Carrot.displayName = "Carrot";
exports.Carrot.metadata = {
    name: "Carrot",
    category: "stroke/foodBeverage",
    tags: ["carrot", "icon"],
    description: "Carrot icon from stroke/foodBeverage category",
    type: ["stroke", "icon"],
};
exports.default = exports.Carrot;
