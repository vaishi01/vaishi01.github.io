"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Vegan = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Vegan = React.forwardRef(function Vegan({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M16 8C20 8 22 6 22 2C18 2 16 4 16 8Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M17.4099 3.59001C15.3347 2.25508 12.8393 1.7345 10.4035 2.12838C7.96763 2.52227 5.76343 3.80281 4.21474 5.72373C2.66606 7.64466 1.88224 10.0703 2.01404 12.5343C2.14584 14.9982 3.18394 17.3265 4.9287 19.0712C6.67346 20.816 9.00169 21.8541 11.4656 21.9859C13.9296 22.1177 16.3553 21.3339 18.2762 19.7852C20.1971 18.2365 21.4776 16.0323 21.8715 13.5965C22.2654 11.1606 21.7448 8.66519 20.4099 6.59001", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M2 2C5.0186 4.40804 7.47673 7.44442 9.20362 10.8982C10.9305 14.352 11.8847 18.1403 12 22C12.9 15.18 13.5 12.5 16 8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M16 8C20 8 22 6 22 2C18 2 16 4 16 8Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M17.41 3.59001C15.3349 2.25508 12.8394 1.7345 10.4036 2.12838C7.96775 2.52227 5.76355 3.80281 4.21486 5.72373C2.66618 7.64466 1.88237 10.0703 2.01416 12.5343C2.14596 14.9982 3.18406 17.3265 4.92882 19.0712C6.67358 20.816 9.00181 21.8541 11.4658 21.9859C13.9297 22.1177 16.3554 21.3339 18.2763 19.7852C20.1972 18.2365 21.4778 16.0323 21.8717 13.5965C22.2655 11.1606 21.745 8.66519 20.41 6.59001", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M2 2C5.0186 4.40804 7.47673 7.44442 9.20362 10.8982C10.9305 14.352 11.8847 18.1403 12 22C12.9 15.18 13.5 12.5 16 8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`Vegan doesn't support ${type}`);
    return null;
});
exports.Vegan.displayName = "Vegan";
exports.Vegan.metadata = {
    name: "Vegan",
    category: "stroke/sustainability",
    tags: ["vegan", "icon"],
    description: "Vegan icon from stroke/sustainability category",
    type: ["stroke", "icon"],
};
exports.default = exports.Vegan;
