"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TreePine = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.TreePine = React.forwardRef(function TreePine({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 14 20 17.3C20.137 17.44 20.23 17.617 20.268 17.809 20.305 18.001 20.285 18.2 20.211 18.381 20.136 18.562 20.01 18.717 19.848 18.827 19.686 18.937 19.496 18.997 19.3 19H4.7C4.504 18.997 4.314 18.937 4.152 18.827 3.99 18.717 3.864 18.562 3.789 18.381 3.715 18.2 3.695 18.001 3.733 17.809 3.77 17.617 3.863 17.44 4 17.3L7 14H6.7C6.504 13.997 6.314 13.937 6.152 13.827 5.99 13.717 5.864 13.562 5.789 13.381 5.715 13.2 5.695 13.001 5.733 12.809 5.77 12.617 5.863 12.44 6 12.3L9 9H8.8C8.596 9.018 8.391 8.974 8.213 8.872 8.035 8.77 7.893 8.615 7.805 8.43 7.718 8.244 7.69 8.036 7.725 7.834 7.76 7.632 7.856 7.446 8 7.3L12 3 16 7.3C16.145 7.446 16.241 7.632 16.275 7.834 16.31 8.036 16.282 8.244 16.195 8.43 16.107 8.615 15.965 8.77 15.787 8.872 15.609 8.974 15.404 9.018 15.2 9H15L18 12.3C18.137 12.44 18.23 12.617 18.268 12.809 18.305 13.001 18.285 13.2 18.211 13.381 18.136 13.562 18.01 13.717 17.848 13.827 17.686 13.937 17.496 13.997 17.3 14H17ZM12 22V19", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 14 20 17.3C20.137 17.44 20.23 17.617 20.268 17.809 20.305 18.001 20.285 18.2 20.211 18.381 20.136 18.562 20.01 18.717 19.848 18.827 19.686 18.937 19.496 18.997 19.3 19H4.7C4.504 18.997 4.314 18.937 4.152 18.827 3.99 18.717 3.864 18.562 3.789 18.381 3.715 18.2 3.695 18.001 3.733 17.809 3.77 17.617 3.863 17.44 4 17.3L7 14H6.7C6.504 13.997 6.314 13.937 6.152 13.827 5.99 13.717 5.864 13.562 5.789 13.381 5.715 13.2 5.695 13.001 5.733 12.809 5.77 12.617 5.863 12.44 6 12.3L9 9H8.8C8.596 9.018 8.391 8.974 8.213 8.872 8.035 8.77 7.893 8.615 7.805 8.43 7.718 8.244 7.69 8.036 7.725 7.834 7.76 7.632 7.856 7.446 8 7.3L12 3 16 7.3C16.145 7.446 16.241 7.632 16.275 7.834 16.31 8.036 16.282 8.244 16.195 8.43 16.107 8.615 15.965 8.77 15.787 8.872 15.609 8.974 15.404 9.018 15.2 9H15L18 12.3C18.137 12.44 18.23 12.617 18.268 12.809 18.305 13.001 18.285 13.2 18.211 13.381 18.136 13.562 18.01 13.717 17.848 13.827 17.686 13.937 17.496 13.997 17.3 14H17ZM12 22V19", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`TreePine doesn't support ${type}`);
    return null;
});
exports.TreePine.displayName = "TreePine";
exports.TreePine.metadata = {
    name: "TreePine",
    category: "stroke/sustainability",
    tags: ["tree", "pine", "icon"],
    description: "TreePine icon from stroke/sustainability category",
    type: ["stroke", "icon"],
};
exports.default = exports.TreePine;
