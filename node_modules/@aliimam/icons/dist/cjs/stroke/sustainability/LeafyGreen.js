"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LeafyGreen = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.LeafyGreen = React.forwardRef(function LeafyGreen({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M2 22C3.25 21.013 4.27 20.025 5.9 19.8 7.311 19.8 8.67 20.336 9.7 21.3 10.235 21.675 10.853 21.913 11.501 21.993 12.149 22.074 12.807 21.995 13.417 21.763 14.027 21.531 14.571 21.153 15.002 20.662 15.433 20.171 15.736 19.582 15.887 18.947 16.536 19.063 17.204 18.993 17.815 18.745 18.426 18.498 18.955 18.083 19.34 17.549 19.726 17.014 19.952 16.382 19.994 15.724 20.036 15.066 19.892 14.41 19.577 13.831 20.15 13.646 20.666 13.316 21.074 12.873 21.483 12.43 21.77 11.889 21.908 11.303 22.046 10.716 22.03 10.104 21.863 9.526 21.695 8.947 21.38 8.422 20.95 8 21.275 7.675 21.533 7.289 21.709 6.864 21.885 6.44 21.975 5.985 21.975 5.525 21.975 5.065 21.885 4.61 21.709 4.186 21.533 3.761 21.275 3.375 20.95 3.05 20.625 2.725 20.239 2.467 19.815 2.291 19.39 2.115 18.935 2.025 18.475 2.025 17.547 2.025 16.657 2.394 16 3.05 15.579 2.62 15.053 2.305 14.474 2.137 13.896 1.97 13.284 1.954 12.697 2.092 12.111 2.23 11.57 2.517 11.127 2.926 10.684 3.334 10.354 3.85 10.169 4.423 9.59 4.108 8.934 3.964 8.276 4.006 7.618 4.048 6.986 4.275 6.451 4.66 5.917 5.046 5.502 5.574 5.255 6.185 5.007 6.796 4.937 7.464 5.053 8.113 4.423 8.266 3.84 8.57 3.354 8.999 2.868 9.428 2.493 9.968 2.262 10.574 2.031 11.179 1.951 11.832 2.028 12.476 2.105 13.119 2.337 13.734 2.705 14.268 3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22ZM2 22 17 7", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M2 22C3.25 21.013 4.27 20.025 5.9 19.8 7.311 19.8 8.67 20.336 9.7 21.3 10.235 21.675 10.853 21.913 11.501 21.993 12.149 22.074 12.807 21.995 13.417 21.763 14.027 21.531 14.571 21.153 15.002 20.662 15.432 20.171 15.736 19.582 15.887 18.947 16.536 19.063 17.204 18.993 17.815 18.745 18.426 18.498 18.954 18.083 19.34 17.549 19.726 17.014 19.952 16.382 19.994 15.724 20.036 15.066 19.892 14.41 19.577 13.831 20.15 13.646 20.666 13.316 21.074 12.873 21.483 12.43 21.77 11.889 21.908 11.303 22.046 10.716 22.03 10.104 21.863 9.526 21.695 8.947 21.38 8.422 20.95 8 21.275 7.675 21.533 7.289 21.709 6.864 21.885 6.44 21.975 5.985 21.975 5.525 21.975 5.065 21.885 4.61 21.709 4.186 21.533 3.761 21.275 3.375 20.95 3.05 20.625 2.725 20.239 2.467 19.814 2.291 19.39 2.115 18.935 2.025 18.475 2.025 17.547 2.025 16.656 2.394 16 3.05 15.579 2.62 15.053 2.305 14.474 2.137 13.896 1.97 13.284 1.954 12.697 2.092 12.111 2.23 11.57 2.517 11.127 2.926 10.684 3.334 10.354 3.85 10.169 4.423 9.59 4.108 8.934 3.964 8.276 4.006 7.618 4.048 6.986 4.275 6.451 4.66 5.917 5.046 5.502 5.574 5.255 6.185 5.007 6.796 4.937 7.464 5.053 8.113 4.423 8.266 3.84 8.57 3.354 8.999 2.868 9.428 2.493 9.968 2.262 10.574 2.031 11.179 1.951 11.832 2.028 12.476 2.105 13.119 2.337 13.734 2.705 14.268 3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22ZM2 22 17 7", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M2 22C3.25 21.013 4.27 20.025 5.9 19.8 7.311 19.8 8.67 20.336 9.7 21.3 10.235 21.675 10.853 21.913 11.501 21.993 12.149 22.074 12.807 21.995 13.417 21.763 14.027 21.531 14.571 21.153 15.002 20.662 15.432 20.171 15.736 19.582 15.887 18.947 16.536 19.063 17.204 18.993 17.815 18.746 18.426 18.498 18.954 18.083 19.34 17.549 19.726 17.014 19.952 16.382 19.994 15.724 20.036 15.066 19.892 14.41 19.577 13.831 20.15 13.646 20.666 13.316 21.074 12.873 21.483 12.43 21.77 11.889 21.908 11.303 22.046 10.716 22.03 10.104 21.863 9.526 21.695 8.947 21.38 8.422 20.95 8 21.275 7.675 21.533 7.289 21.709 6.865 21.885 6.44 21.975 5.985 21.975 5.525 21.975 5.065 21.885 4.61 21.709 4.186 21.533 3.761 21.275 3.375 20.95 3.05 20.625 2.725 20.239 2.467 19.815 2.291 19.39 2.115 18.935 2.025 18.475 2.025 17.547 2.025 16.656 2.394 16 3.05 15.579 2.62 15.053 2.305 14.474 2.138 13.896 1.97 13.284 1.954 12.697 2.092 12.111 2.23 11.57 2.517 11.127 2.926 10.684 3.334 10.354 3.85 10.169 4.423 9.59 4.109 8.934 3.964 8.276 4.006 7.618 4.048 6.986 4.275 6.451 4.66 5.917 5.046 5.502 5.574 5.255 6.185 5.007 6.796 4.937 7.464 5.053 8.113 4.423 8.266 3.84 8.571 3.354 8.999 2.868 9.428 2.493 9.968 2.262 10.574 2.031 11.179 1.951 11.832 2.028 12.476 2.105 13.119 2.337 13.734 2.705 14.268 3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22ZM2 22 17 7", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`LeafyGreen doesn't support ${type}`);
    return null;
});
exports.LeafyGreen.displayName = "LeafyGreen";
exports.LeafyGreen.metadata = {
    name: "LeafyGreen",
    category: "stroke/sustainability",
    tags: ["leafy", "green", "icon"],
    description: "LeafyGreen icon from stroke/sustainability category",
    type: ["stroke", "icon"],
};
exports.default = exports.LeafyGreen;
