"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Layers = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Layers = React.forwardRef(function Layers({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M12.83 2.17999C12.5694 2.06114 12.2864 1.99963 12 1.99963C11.7136 1.99963 11.4305 2.06114 11.17 2.17999L2.59996 6.07999C2.42251 6.15823 2.27164 6.28639 2.16573 6.44885C2.05981 6.61131 2.00342 6.80106 2.00342 6.99499C2.00342 7.18893 2.05981 7.37868 2.16573 7.54113C2.27164 7.70359 2.42251 7.83175 2.59996 7.90999L11.18 11.82C11.4405 11.9388 11.7236 12.0003 12.01 12.0003C12.2964 12.0003 12.5794 11.9388 12.84 11.82L21.42 7.91999C21.5974 7.84175 21.7483 7.71359 21.8542 7.55113C21.9601 7.38868 22.0165 7.19893 22.0165 7.00499C22.0165 6.81106 21.9601 6.6213 21.8542 6.45885C21.7483 6.29639 21.5974 6.16823 21.42 6.08999L12.83 2.17999Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M2 12C2 12.191 2.054 12.379 2.157 12.54 2.26 12.701 2.406 12.83 2.58 12.91L11.18 16.82C11.439 16.937 11.721 16.998 12.005 16.998 12.29 16.998 12.571 16.937 12.83 16.82L21.41 12.92C21.587 12.84 21.737 12.711 21.842 12.548 21.947 12.384 22.002 12.194 22 12M2 17C2 17.191 2.054 17.379 2.157 17.54 2.26 17.701 2.406 17.83 2.58 17.91L11.18 21.82C11.439 21.937 11.721 21.998 12.005 21.998 12.29 21.998 12.571 21.937 12.83 21.82L21.41 17.92C21.587 17.84 21.737 17.711 21.842 17.548 21.947 17.384 22.002 17.194 22 17", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M12.83 2.17999C12.5694 2.06114 12.2864 1.99963 12 1.99963C11.7136 1.99963 11.4305 2.06114 11.17 2.17999L2.59996 6.07999C2.42251 6.15823 2.27164 6.28639 2.16573 6.44885C2.05981 6.61131 2.00342 6.80106 2.00342 6.99499C2.00342 7.18893 2.05981 7.37868 2.16573 7.54113C2.27164 7.70359 2.42251 7.83175 2.59996 7.90999L11.18 11.82C11.4405 11.9388 11.7236 12.0003 12.01 12.0003C12.2964 12.0003 12.5794 11.9388 12.84 11.82L21.42 7.91999C21.5974 7.84175 21.7483 7.71359 21.8542 7.55113C21.9601 7.38868 22.0165 7.19893 22.0165 7.00499C22.0165 6.81106 21.9601 6.6213 21.8542 6.45885C21.7483 6.29639 21.5974 6.16823 21.42 6.08999L12.83 2.17999Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M2 12C2 12.191 2.054 12.379 2.157 12.54 2.26 12.701 2.406 12.83 2.58 12.91L11.18 16.82C11.439 16.937 11.721 16.998 12.005 16.998 12.29 16.998 12.571 16.937 12.83 16.82L21.41 12.92C21.587 12.84 21.737 12.711 21.842 12.548 21.947 12.384 22.002 12.194 22 12M2 17C2 17.191 2.054 17.379 2.157 17.54 2.26 17.701 2.406 17.83 2.58 17.91L11.18 21.82C11.439 21.937 11.721 21.998 12.005 21.998 12.29 21.998 12.571 21.937 12.83 21.82L21.41 17.92C21.587 17.84 21.737 17.711 21.842 17.548 21.947 17.384 22.002 17.194 22 17", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`Layers doesn't support ${type}`);
    return null;
});
exports.Layers.displayName = "Layers";
exports.Layers.metadata = {
    name: "Layers",
    category: "stroke/layout",
    tags: ["layers", "icon"],
    description: "Layers icon from stroke/layout category",
    type: ["stroke", "icon"],
};
exports.default = exports.Layers;
