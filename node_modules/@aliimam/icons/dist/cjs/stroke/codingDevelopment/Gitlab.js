"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Gitlab = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Gitlab = React.forwardRef(function Gitlab({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, ...props }, forwardedRef) {
    return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M22.0001 13.29L18.6701 3.29001C18.6409 3.21825 18.5924 3.15595 18.5301 3.11001C18.471 3.04997 18.3936 3.01128 18.3101 3.00001C18.2279 2.99854 18.1475 3.02304 18.0801 3.07001C18.0177 3.11595 17.9692 3.17825 17.9401 3.25001L15.6801 9.92001H8.32007L6.10007 3.26001C6.08219 3.19264 6.04782 3.13079 6.00007 3.08001C5.92625 3.02218 5.83364 2.99368 5.74007 3.00001C5.65795 2.99854 5.57745 3.02304 5.51007 3.07001C5.4477 3.11595 5.39925 3.17825 5.37007 3.25001L2.00007 13.29C1.95128 13.4391 1.95114 13.5999 1.99968 13.7491C2.04821 13.8982 2.1429 14.0281 2.27007 14.12L12.0001 21L21.6901 14.12C21.8282 14.0373 21.9341 13.9101 21.9904 13.7593C22.0468 13.6085 22.0502 13.443 22.0001 13.29Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
});
exports.Gitlab.displayName = "Gitlab";
exports.Gitlab.metadata = {
    name: "Gitlab",
    category: "stroke/codingDevelopment",
    tags: ["gitlab", "icon"],
    description: "Gitlab icon from stroke/codingDevelopment category",
    type: ["stroke", "icon"],
};
exports.default = exports.Gitlab;
