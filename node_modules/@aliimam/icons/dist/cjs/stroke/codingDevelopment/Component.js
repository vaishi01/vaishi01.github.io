"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Component = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Component = React.forwardRef(function Component({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M15.536 11.293C15.349 11.481 15.243 11.735 15.243 12 15.243 12.265 15.349 12.519 15.536 12.707L17.912 15.084C18.1 15.271 18.354 15.377 18.619 15.377 18.884 15.377 19.138 15.271 19.326 15.084L21.703 12.707C21.89 12.519 21.996 12.265 21.996 12 21.996 11.735 21.89 11.481 21.703 11.293L19.326 8.916C19.138 8.728 18.884 8.623 18.619 8.623 18.354 8.623 18.1 8.728 17.912 8.916L15.536 11.293ZM2.297 11.293C2.109 11.481 2.004 11.735 2.004 12 2.004 12.265 2.109 12.519 2.297 12.707L4.674 15.084C4.861 15.271 5.116 15.377 5.381 15.377 5.646 15.377 5.9 15.271 6.088 15.084L8.465 12.707C8.652 12.519 8.758 12.265 8.758 12 8.758 11.735 8.652 11.481 8.465 11.293L6.088 8.916C5.9 8.728 5.646 8.623 5.381 8.623 5.116 8.623 4.861 8.728 4.674 8.916L2.297 11.293ZM8.916 17.912C8.823 18.005 8.749 18.115 8.699 18.237 8.649 18.358 8.623 18.488 8.623 18.619 8.623 18.751 8.649 18.881 8.699 19.002 8.749 19.124 8.823 19.234 8.916 19.327L11.293 21.703C11.481 21.89 11.735 21.996 12 21.996 12.265 21.996 12.52 21.89 12.707 21.703L15.084 19.327C15.177 19.234 15.251 19.124 15.301 19.002 15.352 18.881 15.377 18.751 15.377 18.619 15.377 18.488 15.352 18.358 15.301 18.237 15.251 18.115 15.177 18.005 15.084 17.912L12.707 15.536C12.52 15.349 12.265 15.243 12 15.243 11.735 15.243 11.481 15.349 11.293 15.536L8.916 17.912ZM8.916 4.674C8.729 4.862 8.623 5.116 8.623 5.381 8.623 5.646 8.729 5.901 8.916 6.088L11.293 8.464C11.481 8.652 11.735 8.757 12 8.757 12.265 8.757 12.52 8.652 12.707 8.464L15.084 6.088C15.272 5.901 15.377 5.646 15.377 5.381 15.377 5.116 15.272 4.862 15.084 4.674L12.707 2.297C12.52 2.11 12.265 2.004 12 2.004 11.735 2.004 11.481 2.11 11.293 2.297L8.916 4.674Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M15.536 11.293C15.349 11.481 15.243 11.735 15.243 12 15.243 12.265 15.349 12.52 15.536 12.707L17.912 15.084C18.1 15.272 18.354 15.377 18.619 15.377 18.884 15.377 19.138 15.272 19.326 15.084L21.703 12.707C21.89 12.52 21.996 12.265 21.996 12 21.996 11.735 21.89 11.481 21.703 11.293L19.326 8.916C19.138 8.729 18.884 8.623 18.619 8.623 18.354 8.623 18.1 8.729 17.912 8.916L15.536 11.293ZM2.297 11.293C2.109 11.481 2.004 11.735 2.004 12 2.004 12.265 2.109 12.52 2.297 12.707L4.674 15.084C4.861 15.272 5.116 15.377 5.381 15.377 5.646 15.377 5.9 15.272 6.088 15.084L8.465 12.707C8.652 12.52 8.758 12.265 8.758 12 8.758 11.735 8.652 11.481 8.465 11.293L6.088 8.916C5.9 8.729 5.646 8.623 5.381 8.623 5.116 8.623 4.861 8.729 4.674 8.916L2.297 11.293ZM8.916 17.912C8.823 18.005 8.749 18.115 8.699 18.237 8.649 18.358 8.623 18.488 8.623 18.619 8.623 18.751 8.649 18.881 8.699 19.002 8.749 19.124 8.823 19.234 8.916 19.327L11.293 21.703C11.481 21.89 11.735 21.996 12 21.996 12.265 21.996 12.52 21.89 12.707 21.703L15.084 19.327C15.177 19.234 15.251 19.124 15.301 19.002 15.352 18.881 15.377 18.751 15.377 18.619 15.377 18.488 15.352 18.358 15.301 18.237 15.251 18.115 15.177 18.005 15.084 17.912L12.707 15.536C12.52 15.349 12.265 15.243 12 15.243 11.735 15.243 11.481 15.349 11.293 15.536L8.916 17.912ZM8.916 4.674C8.729 4.861 8.623 5.116 8.623 5.381 8.623 5.646 8.729 5.9 8.916 6.088L11.293 8.464C11.481 8.651 11.735 8.757 12 8.757 12.265 8.757 12.52 8.651 12.707 8.464L15.084 6.088C15.272 5.9 15.377 5.646 15.377 5.381 15.377 5.116 15.272 4.861 15.084 4.674L12.707 2.297C12.52 2.109 12.265 2.004 12 2.004 11.735 2.004 11.481 2.109 11.293 2.297L8.916 4.674Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`Component doesn't support ${type}`);
    return null;
});
exports.Component.displayName = "Component";
exports.Component.metadata = {
    name: "Component",
    category: "stroke/codingDevelopment",
    tags: ["component", "icon"],
    description: "Component icon from stroke/codingDevelopment category",
    type: ["stroke", "icon"],
};
exports.default = exports.Component;
