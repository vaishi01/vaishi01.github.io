"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThumbsDown = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.ThumbsDown = React.forwardRef(function ThumbsDown({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 14V2M9 18.12 10 14H4.17C3.859 14 3.553 13.928 3.275 13.789 2.998 13.65 2.756 13.448 2.57 13.2 2.384 12.952 2.258 12.663 2.202 12.358 2.147 12.052 2.163 11.738 2.25 11.44L4.58 3.44C4.701 3.025 4.954 2.66 5.3 2.4 5.646 2.14 6.067 2 6.5 2H20C20.53 2 21.039 2.211 21.414 2.586 21.789 2.961 22 3.47 22 4V12C22 12.53 21.789 13.039 21.414 13.414 21.039 13.789 20.53 14 20 14H17.24C16.868 14 16.503 14.104 16.187 14.3 15.871 14.496 15.616 14.777 15.45 15.11L12 22C11.528 21.994 11.064 21.882 10.642 21.671 10.22 21.461 9.851 21.158 9.563 20.785 9.274 20.412 9.074 19.978 8.976 19.517 8.879 19.055 8.887 18.578 9 18.12Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 14V2M9 18.12 10 14H4.17C3.86 14 3.553 13.928 3.276 13.789 2.998 13.65 2.756 13.448 2.57 13.2 2.384 12.952 2.258 12.663 2.202 12.358 2.147 12.052 2.163 11.738 2.25 11.44L4.58 3.44C4.701 3.025 4.954 2.66 5.3 2.4 5.646 2.14 6.067 2 6.5 2H20C20.53 2 21.039 2.211 21.414 2.586 21.789 2.961 22 3.47 22 4V12C22 12.53 21.789 13.039 21.414 13.414 21.039 13.789 20.53 14 20 14H17.24C16.868 14 16.503 14.104 16.187 14.3 15.871 14.496 15.616 14.777 15.45 15.11L12 22C11.528 21.994 11.064 21.882 10.642 21.671 10.22 21.461 9.851 21.158 9.563 20.785 9.274 20.412 9.074 19.978 8.976 19.517 8.879 19.055 8.887 18.578 9 18.12Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17 14V2M9 18.12 10 14H4.17C3.86 14 3.553 13.928 3.276 13.789 2.998 13.65 2.756 13.448 2.57 13.2 2.384 12.952 2.258 12.663 2.202 12.358 2.147 12.052 2.163 11.738 2.25 11.44L4.58 3.44C4.701 3.025 4.954 2.66 5.3 2.4 5.646 2.14 6.067 2 6.5 2H20C20.53 2 21.039 2.211 21.414 2.586 21.789 2.961 22 3.47 22 4V12C22 12.53 21.789 13.039 21.414 13.414 21.039 13.789 20.53 14 20 14H17.24C16.868 14 16.503 14.104 16.187 14.3 15.871 14.496 15.616 14.777 15.45 15.11L12 22C11.528 21.994 11.064 21.882 10.642 21.671 10.22 21.461 9.851 21.158 9.563 20.785 9.274 20.412 9.074 19.978 8.976 19.517 8.879 19.055 8.887 18.578 9 18.12Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`ThumbsDown doesn't support ${type}`);
    return null;
});
exports.ThumbsDown.displayName = "ThumbsDown";
exports.ThumbsDown.metadata = {
    name: "ThumbsDown",
    category: "stroke/social",
    tags: ["thumbs", "down", "icon"],
    description: "ThumbsDown icon from stroke/social category",
    type: ["stroke", "icon"],
};
exports.default = exports.ThumbsDown;
