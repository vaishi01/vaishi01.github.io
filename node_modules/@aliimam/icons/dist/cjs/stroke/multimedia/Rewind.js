"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rewind = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Rewind = React.forwardRef(function Rewind({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 6C12 5.605 11.883 5.218 11.663 4.889 11.443 4.56 11.131 4.304 10.765 4.153 10.4 4.001 9.998 3.962 9.61 4.039 9.222 4.116 8.866 4.306 8.586 4.586L2.586 10.586C2.211 10.961 2 11.47 2 12 2 12.53 2.211 13.039 2.586 13.414L8.586 19.414C8.866 19.694 9.222 19.884 9.61 19.961 9.998 20.038 10.4 19.999 10.765 19.847 11.131 19.696 11.443 19.44 11.663 19.111 11.883 18.782 12 18.396 12 18V6ZM22 6C22 5.605 21.883 5.218 21.663 4.889 21.443 4.56 21.131 4.304 20.765 4.153 20.4 4.001 19.998 3.962 19.61 4.039 19.222 4.116 18.866 4.306 18.586 4.586L12.586 10.586C12.211 10.961 12.001 11.47 12.001 12 12.001 12.53 12.211 13.039 12.586 13.414L18.586 19.414C18.866 19.694 19.222 19.884 19.61 19.961 19.998 20.038 20.4 19.999 20.765 19.847 21.131 19.696 21.443 19.44 21.663 19.111 21.883 18.782 22 18.396 22 18V6Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 6C12 5.604 11.883 5.218 11.663 4.889 11.443 4.56 11.131 4.304 10.765 4.153 10.4 4.001 9.998 3.962 9.61 4.039 9.222 4.116 8.866 4.306 8.586 4.586L2.586 10.586C2.211 10.961 2 11.47 2 12 2 12.53 2.211 13.039 2.586 13.414L8.586 19.414C8.866 19.694 9.222 19.884 9.61 19.961 9.998 20.038 10.4 19.999 10.765 19.847 11.131 19.696 11.443 19.44 11.663 19.111 11.883 18.782 12 18.395 12 18V6ZM22 6C22 5.604 21.883 5.218 21.663 4.889 21.443 4.56 21.131 4.304 20.765 4.153 20.4 4.001 19.998 3.962 19.61 4.039 19.222 4.116 18.866 4.306 18.586 4.586L12.586 10.586C12.211 10.961 12 11.47 12 12 12 12.53 12.211 13.039 12.586 13.414L18.586 19.414C18.866 19.694 19.222 19.884 19.61 19.961 19.998 20.038 20.4 19.999 20.765 19.847 21.131 19.696 21.443 19.44 21.663 19.111 21.883 18.782 22 18.395 22 18V6Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`Rewind doesn't support ${type}`);
    return null;
});
exports.Rewind.displayName = "Rewind";
exports.Rewind.metadata = {
    name: "Rewind",
    category: "stroke/multimedia",
    tags: ["rewind", "icon"],
    description: "Rewind icon from stroke/multimedia category",
    type: ["stroke", "icon"],
};
exports.default = exports.Rewind;
