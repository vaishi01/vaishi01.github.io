"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HouseHeart = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.HouseHeart = React.forwardRef(function HouseHeart({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M8.62008 13.8C8.4097 13.5807 8.24594 13.321 8.13868 13.0366C8.03142 12.7523 7.98288 12.4491 7.99599 12.1455C8.00911 11.8418 8.0836 11.544 8.21499 11.2699C8.34637 10.9959 8.53191 10.7513 8.76042 10.5509C8.98893 10.3505 9.25567 10.1985 9.54454 10.104C9.83341 10.0095 10.1384 9.97457 10.4412 10.0012C10.7439 10.0279 11.0382 10.1156 11.3061 10.2591C11.574 10.4025 11.8101 10.5988 12.0001 10.836C12.191 10.6013 12.4273 10.4075 12.6948 10.2661C12.9624 10.1248 13.2557 10.0389 13.5572 10.0136C13.8587 9.9882 14.1622 10.0239 14.4496 10.1186C14.737 10.2132 15.0023 10.3649 15.2297 10.5645C15.4572 10.764 15.642 11.0074 15.7732 11.2801C15.9044 11.5527 15.9792 11.849 15.9933 12.1513C16.0073 12.4535 15.9602 12.7555 15.8549 13.0391C15.7495 13.3228 15.588 13.5822 15.3801 13.802L12.7541 16.658C12.6604 16.7659 12.5446 16.8524 12.4147 16.9117C12.2847 16.9709 12.1435 17.0016 12.0006 17.0016C11.8577 17.0016 11.7165 16.9709 11.5865 16.9117C11.4565 16.8524 11.3408 16.7659 11.2471 16.658L8.62008 13.8Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M3 9.99999C2.99993 9.70906 3.06333 9.42161 3.18579 9.15771C3.30824 8.8938 3.4868 8.65979 3.709 8.47199L10.709 2.47199C11.07 2.1669 11.5274 1.99951 12 1.99951C12.4726 1.99951 12.93 2.1669 13.291 2.47199L20.291 8.47199C20.5132 8.65979 20.6918 8.8938 20.8142 9.15771C20.9367 9.42161 21.0001 9.70906 21 9.99999V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V9.99999Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M8.61996 13.8C8.40958 13.5807 8.24582 13.321 8.13855 13.0366C8.03129 12.7523 7.98276 12.4491 7.99587 12.1455C8.00899 11.8418 8.08348 11.544 8.21486 11.2699C8.34625 10.9959 8.53179 10.7513 8.7603 10.5509C8.98881 10.3505 9.25554 10.1985 9.54442 10.104C9.83329 10.0095 10.1383 9.97457 10.4411 10.0012C10.7438 10.0279 11.038 10.1156 11.306 10.2591C11.5739 10.4025 11.81 10.5988 12 10.836C12.1909 10.6013 12.4272 10.4075 12.6947 10.2661C12.9622 10.1248 13.2555 10.0389 13.557 10.0136C13.8586 9.9882 14.1621 10.0239 14.4495 10.1186C14.7369 10.2132 15.0022 10.3649 15.2296 10.5645C15.457 10.764 15.6419 11.0074 15.7731 11.2801C15.9043 11.5527 15.9791 11.849 15.9932 12.1513C16.0072 12.4535 15.9601 12.7555 15.8548 13.0391C15.7494 13.3228 15.5879 13.5822 15.38 13.802L12.754 16.658C12.6603 16.7659 12.5445 16.8524 12.4145 16.9117C12.2845 16.9709 12.1433 17.0016 12.0005 17.0016C11.8576 17.0016 11.7164 16.9709 11.5864 16.9117C11.4564 16.8524 11.3406 16.7659 11.247 16.658L8.61996 13.8Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M3 9.99999C2.99993 9.70906 3.06333 9.42161 3.18579 9.15771C3.30824 8.8938 3.4868 8.65979 3.709 8.47199L10.709 2.47199C11.07 2.1669 11.5274 1.99951 12 1.99951C12.4726 1.99951 12.93 2.1669 13.291 2.47199L20.291 8.47199C20.5132 8.65979 20.6918 8.8938 20.8142 9.15771C20.9367 9.42161 21.0001 9.70906 21 9.99999V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V9.99999Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M8.61996 13.8C8.40958 13.5807 8.24582 13.321 8.13855 13.0366C8.03129 12.7523 7.98276 12.4491 7.99587 12.1455C8.00899 11.8418 8.08348 11.544 8.21486 11.2699C8.34625 10.9959 8.53179 10.7513 8.7603 10.5509C8.98881 10.3505 9.25554 10.1985 9.54442 10.104C9.83329 10.0095 10.1383 9.97457 10.4411 10.0012C10.7438 10.0279 11.038 10.1156 11.306 10.2591C11.5739 10.4025 11.81 10.5988 12 10.836C12.1909 10.6013 12.4272 10.4075 12.6947 10.2661C12.9622 10.1248 13.2555 10.0389 13.557 10.0136C13.8586 9.9882 14.1621 10.0239 14.4495 10.1186C14.7369 10.2132 15.0022 10.3649 15.2296 10.5645C15.457 10.764 15.6419 11.0074 15.7731 11.2801C15.9043 11.5527 15.9791 11.849 15.9932 12.1513C16.0072 12.4535 15.9601 12.7555 15.8548 13.0391C15.7494 13.3228 15.5879 13.5822 15.38 13.802L12.754 16.658C12.6603 16.7659 12.5445 16.8524 12.4145 16.9117C12.2845 16.9709 12.1433 17.0016 12.0005 17.0016C11.8576 17.0016 11.7164 16.9709 11.5864 16.9117C11.4564 16.8524 11.3406 16.7659 11.247 16.658L8.61996 13.8Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M3 9.99999C2.99993 9.70906 3.06333 9.42161 3.18579 9.15771C3.30824 8.8938 3.4868 8.65979 3.709 8.47199L10.709 2.47199C11.07 2.1669 11.5274 1.99951 12 1.99951C12.4726 1.99951 12.93 2.1669 13.291 2.47199L20.291 8.47199C20.5132 8.65979 20.6918 8.8938 20.8142 9.15771C20.9367 9.42161 21.0001 9.70906 21 9.99999V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V9.99999Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`HouseHeart doesn't support ${type}`);
    return null;
});
exports.HouseHeart.displayName = "HouseHeart";
exports.HouseHeart.metadata = {
    name: "HouseHeart",
    category: "stroke/medical",
    tags: ["house", "heart", "icon"],
    description: "HouseHeart icon from stroke/medical category",
    type: ["stroke", "icon"],
};
exports.default = exports.HouseHeart;
