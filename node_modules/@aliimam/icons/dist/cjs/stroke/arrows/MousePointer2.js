"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MousePointer2 = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.MousePointer2 = React.forwardRef(function MousePointer2({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, ...props }, forwardedRef) {
    return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M4.03702 4.68802C3.99755 4.59694 3.98638 4.49609 4.00496 4.39858C4.02354 4.30107 4.07101 4.21139 4.1412 4.1412C4.21139 4.07101 4.30107 4.02354 4.39858 4.00496C4.49609 3.98638 4.59694 3.99755 4.68802 4.03702L20.688 10.537C20.7853 10.5767 20.8676 10.6459 20.9233 10.735C20.979 10.8241 21.0052 10.9284 20.9983 11.0333C20.9913 11.1381 20.9515 11.238 20.8845 11.319C20.8175 11.3999 20.7267 11.4576 20.625 11.484L14.501 13.064C14.155 13.153 13.8391 13.333 13.5863 13.5853C13.3334 13.8377 13.1527 14.1532 13.063 14.499L11.484 20.625C11.4576 20.7267 11.3999 20.8175 11.319 20.8845C11.238 20.9515 11.1381 20.9913 11.0333 20.9983C10.9284 21.0052 10.8241 20.979 10.735 20.9233C10.6459 20.8676 10.5767 20.7853 10.537 20.688L4.03702 4.68802Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
});
exports.MousePointer2.displayName = "MousePointer2";
exports.MousePointer2.metadata = {
    name: "MousePointer2",
    category: "stroke/arrows",
    tags: ["mousepointer", "icon"],
    description: "MousePointer2 icon from stroke/arrows category",
    type: ["stroke", "icon"],
};
exports.default = exports.MousePointer2;
