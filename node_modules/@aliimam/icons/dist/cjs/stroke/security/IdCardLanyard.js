"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdCardLanyard = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.IdCardLanyard = React.forwardRef(function IdCardLanyard({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M13.5 8H10.5M15 2 14 4H17C17.53 4 18.039 4.211 18.414 4.586 18.789 4.961 19 5.47 19 6V20C19 20.53 18.789 21.039 18.414 21.414 18.039 21.789 17.53 22 17 22H7C6.47 22 5.961 21.789 5.586 21.414 5.211 21.039 5 20.53 5 20V6C5 5.47 5.211 4.961 5.586 4.586 5.961 4.211 6.47 4 7 4H10", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M16.899 22C16.669 20.87 16.056 19.855 15.163 19.125 14.27 18.396 13.153 17.997 12 17.997 10.847 17.997 9.729 18.396 8.836 19.125 7.943 19.855 7.33 20.87 7.1 22M9 2 12 8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M12 18C13.6569 18 15 16.6569 15 15C15 13.3431 13.6569 12 12 12C10.3431 12 9 13.3431 9 15C9 16.6569 10.3431 18 12 18Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M13.5 8H10.5M15 2 14 4H17C17.53 4 18.039 4.211 18.414 4.586 18.789 4.961 19 5.47 19 6V20C19 20.53 18.789 21.039 18.414 21.414 18.039 21.789 17.53 22 17 22H7C6.47 22 5.961 21.789 5.586 21.414 5.211 21.039 5 20.53 5 20V6C5 5.47 5.211 4.961 5.586 4.586 5.961 4.211 6.47 4 7 4H10", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M16.899 22C16.669 20.87 16.056 19.855 15.163 19.125 14.27 18.396 13.152 17.997 12 17.997 10.847 17.997 9.729 18.396 8.836 19.125 7.943 19.855 7.33 20.87 7.1 22M9 2 12 8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M12 18C13.6569 18 15 16.6569 15 15C15 13.3431 13.6569 12 12 12C10.3431 12 9 13.3431 9 15C9 16.6569 10.3431 18 12 18Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`IdCardLanyard doesn't support ${type}`);
    return null;
});
exports.IdCardLanyard.displayName = "IdCardLanyard";
exports.IdCardLanyard.metadata = {
    name: "IdCardLanyard",
    category: "stroke/security",
    tags: ["id", "card", "lanyard", "icon"],
    description: "IdCardLanyard icon from stroke/security category",
    type: ["stroke", "icon"],
};
exports.default = exports.IdCardLanyard;
