"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HatGlasses = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.HatGlasses = React.forwardRef(function HatGlasses({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M14 18C14 17.47 13.789 16.961 13.414 16.586 13.039 16.211 12.53 16 12 16 11.47 16 10.961 16.211 10.586 16.586 10.211 16.961 10 17.47 10 18M19 11 16.89 4.343C16.798 4.077 16.65 3.834 16.457 3.629 16.265 3.424 16.031 3.262 15.771 3.154 15.511 3.045 15.231 2.993 14.95 3 14.669 3.007 14.392 3.074 14.138 3.195L12.862 3.805C12.593 3.934 12.298 4 12 4H8.5C8.064 4 7.641 4.142 7.293 4.405 6.946 4.668 6.694 5.037 6.575 5.456L5 11M2 11H22M17 21C18.657 21 20 19.657 20 18 20 16.343 18.657 15 17 15 15.343 15 14 16.343 14 18 14 19.657 15.343 21 17 21ZM7 21C8.657 21 10 19.657 10 18 10 16.343 8.657 15 7 15 5.343 15 4 16.343 4 18 4 19.657 5.343 21 7 21Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M14 18C14 17.47 13.789 16.961 13.414 16.586 13.039 16.211 12.53 16 12 16 11.47 16 10.961 16.211 10.586 16.586 10.211 16.961 10 17.47 10 18M19 11 16.89 4.343C16.798 4.077 16.65 3.834 16.457 3.629 16.265 3.424 16.031 3.262 15.771 3.153 15.511 3.045 15.231 2.993 14.95 3 14.669 3.007 14.392 3.074 14.138 3.195L12.862 3.805C12.593 3.933 12.298 4 12 4H8.5C8.064 4 7.641 4.142 7.293 4.405 6.946 4.668 6.694 5.037 6.575 5.456L5 11M2 11H22M17 21C18.657 21 20 19.657 20 18 20 16.343 18.657 15 17 15 15.343 15 14 16.343 14 18 14 19.657 15.343 21 17 21ZM7 21C8.657 21 10 19.657 10 18 10 16.343 8.657 15 7 15 5.343 15 4 16.343 4 18 4 19.657 5.343 21 7 21Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M14 18C14 17.47 13.789 16.961 13.414 16.586 13.039 16.211 12.53 16 12 16 11.47 16 10.961 16.211 10.586 16.586 10.211 16.961 10 17.47 10 18M19 11 16.89 4.343C16.798 4.077 16.65 3.834 16.457 3.629 16.265 3.424 16.031 3.262 15.771 3.154 15.511 3.045 15.231 2.993 14.95 3 14.669 3.007 14.392 3.074 14.138 3.195L12.862 3.805C12.593 3.934 12.298 4 12 4H8.5C8.064 4 7.641 4.142 7.293 4.405 6.946 4.668 6.694 5.037 6.575 5.456L5 11M2 11H22M17 21C18.657 21 20 19.657 20 18 20 16.343 18.657 15 17 15 15.343 15 14 16.343 14 18 14 19.657 15.343 21 17 21ZM7 21C8.657 21 10 19.657 10 18 10 16.343 8.657 15 7 15 5.343 15 4 16.343 4 18 4 19.657 5.343 21 7 21Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`HatGlasses doesn't support ${type}`);
    return null;
});
exports.HatGlasses.displayName = "HatGlasses";
exports.HatGlasses.metadata = {
    name: "HatGlasses",
    category: "stroke/security",
    tags: ["hat", "glasses", "icon"],
    description: "HatGlasses icon from stroke/security category",
    type: ["stroke", "icon"],
};
exports.default = exports.HatGlasses;
