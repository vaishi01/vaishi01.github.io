"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CircleStar = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.CircleStar = React.forwardRef(function CircleStar({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M11.0512 7.61599C11.1173 7.41332 11.2464 7.23708 11.4197 7.11295C11.593 6.98883 11.8014 6.92333 12.0146 6.92601C12.2277 6.92869 12.4344 6.99941 12.6045 7.12785C12.7746 7.25629 12.8993 7.43573 12.9602 7.63999L13.6972 9.09199C13.7689 9.23314 13.8732 9.35525 14.0013 9.44826C14.1294 9.54127 14.2778 9.60252 14.4342 9.62699L16.0682 9.88299C16.2786 9.88381 16.4834 9.95098 16.6534 10.0749C16.8235 10.1989 16.9501 10.3733 17.0152 10.5734C17.0803 10.7735 17.0807 10.989 17.0163 11.1893C16.9518 11.3896 16.8258 11.5644 16.6562 11.689L15.4842 12.857C15.372 12.9687 15.2879 13.1055 15.2389 13.256C15.1899 13.4066 15.1773 13.5666 15.2022 13.723L15.4612 15.336C15.5325 15.5382 15.5369 15.7579 15.4738 15.9627C15.4107 16.1676 15.2834 16.3468 15.1108 16.4738C14.9381 16.6009 14.7292 16.6691 14.5149 16.6684C14.3005 16.6677 14.0921 16.5981 13.9202 16.47L12.4552 15.72C12.3141 15.6477 12.1578 15.61 11.9992 15.61C11.8407 15.61 11.6844 15.6477 11.5432 15.72L10.0782 16.47C9.90641 16.5971 9.69839 16.6658 9.48468 16.666C9.27096 16.6663 9.06279 16.598 8.89068 16.4713C8.71858 16.3446 8.59159 16.1661 8.52834 15.962C8.46509 15.7578 8.46891 15.5388 8.53923 15.337L8.79723 13.724C8.82231 13.5675 8.80981 13.4072 8.76078 13.2565C8.71175 13.1057 8.62759 12.9688 8.51523 12.857L7.35923 11.705C7.18389 11.5835 7.05198 11.4091 6.98279 11.2074C6.91359 11.0056 6.91073 10.787 6.97462 10.5835C7.03852 10.3799 7.16581 10.2022 7.33792 10.0762C7.51002 9.95014 7.71792 9.88245 7.93123 9.88299L9.56423 9.62699C9.72065 9.60252 9.86904 9.54127 9.99717 9.44826C10.1253 9.35525 10.2295 9.23314 10.3012 9.09199L11.0512 7.61599Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M11.051 7.61602C11.1171 7.41336 11.2462 7.23711 11.4194 7.11298C11.5927 6.98886 11.8012 6.92336 12.0143 6.92604C12.2275 6.92872 12.4342 6.99944 12.6043 7.12788C12.7744 7.25632 12.899 7.43576 12.96 7.64002L13.697 9.09202C13.7687 9.23317 13.8729 9.35528 14.001 9.44829C14.1292 9.5413 14.2776 9.60255 14.434 9.62702L16.068 9.88302C16.2784 9.88384 16.4832 9.95101 16.6532 10.075C16.8232 10.1989 16.9498 10.3734 17.015 10.5734C17.0801 10.7735 17.0805 10.989 17.016 11.1893C16.9516 11.3896 16.8256 11.5645 16.656 11.689L15.484 12.857C15.3718 12.9687 15.2877 13.1055 15.2387 13.2561C15.1896 13.4066 15.1771 13.5667 15.202 13.723L15.461 15.336C15.5322 15.5382 15.5366 15.7579 15.4735 15.9628C15.4104 16.1676 15.2832 16.3468 15.1105 16.4738C14.9379 16.6009 14.729 16.6691 14.5146 16.6684C14.3003 16.6677 14.0918 16.5982 13.92 16.47L12.455 15.72C12.3139 15.6477 12.1576 15.61 11.999 15.61C11.8404 15.61 11.6841 15.6477 11.543 15.72L10.078 16.47C9.90617 16.5971 9.69815 16.6658 9.48443 16.6661C9.27072 16.6663 9.06255 16.5981 8.89044 16.4714C8.71833 16.3447 8.59135 16.1662 8.5281 15.962C8.46485 15.7579 8.46866 15.5388 8.53898 15.337L8.79698 13.724C8.82206 13.5675 8.80957 13.4073 8.76054 13.2565C8.71151 13.1058 8.62734 12.9688 8.51498 12.857L7.35898 11.705C7.18364 11.5835 7.05174 11.4092 6.98254 11.2074C6.91335 11.0056 6.91049 10.787 6.97438 10.5835C7.03827 10.38 7.16557 10.2022 7.33767 10.0762C7.50978 9.95017 7.71767 9.88248 7.93098 9.88302L9.56398 9.62702C9.72041 9.60255 9.86879 9.5413 9.99692 9.44829C10.1251 9.35528 10.2293 9.23317 10.301 9.09202L11.051 7.61602Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`CircleStar doesn't support ${type}`);
    return null;
});
exports.CircleStar.displayName = "CircleStar";
exports.CircleStar.metadata = {
    name: "CircleStar",
    category: "stroke/sports",
    tags: ["circle", "star", "icon"],
    description: "CircleStar icon from stroke/sports category",
    type: ["stroke", "icon"],
};
exports.default = exports.CircleStar;
