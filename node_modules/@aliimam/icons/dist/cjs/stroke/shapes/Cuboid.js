"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cuboid = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Cuboid = React.forwardRef(function Cuboid({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M21.12 6.40003L15.07 2.34003C14.7515 2.1237 14.3773 2.00391 13.9924 1.99504C13.6074 1.98617 13.2281 2.0886 12.9 2.29003L2.95 8.41003C2.65992 8.58896 2.42038 8.83906 2.25411 9.13659C2.08785 9.43412 2.00038 9.7692 2 10.11V15.93C1.99951 16.2576 2.0795 16.5803 2.23294 16.8698C2.38639 17.1592 2.60858 17.4066 2.88 17.59L8.93 21.66C9.24852 21.8764 9.6227 21.9961 10.0076 22.005C10.3926 22.0139 10.7719 21.9115 11.1 21.71L21.05 15.59C21.3401 15.4111 21.5796 15.161 21.7459 14.8635C21.9122 14.5659 21.9996 14.2309 22 13.89V8.06003C22.0005 7.73242 21.9205 7.40971 21.7671 7.12026C21.6136 6.83081 21.3914 6.58349 21.12 6.40003Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 22V14L2.25 9.15M10 14 21.77 7.13", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M21.12 6.40003L15.07 2.34003C14.7515 2.1237 14.3773 2.00391 13.9924 1.99504C13.6074 1.98617 13.2281 2.0886 12.9 2.29003L2.95 8.41003C2.65992 8.58896 2.42038 8.83906 2.25411 9.13659C2.08785 9.43412 2.00038 9.7692 2 10.11V15.93C1.99951 16.2576 2.0795 16.5803 2.23294 16.8698C2.38639 17.1592 2.60858 17.4066 2.88 17.59L8.93 21.66C9.24852 21.8764 9.6227 21.9961 10.0076 22.005C10.3926 22.0139 10.7719 21.9115 11.1 21.71L21.05 15.59C21.3401 15.4111 21.5796 15.161 21.7459 14.8635C21.9122 14.5659 21.9996 14.2309 22 13.89V8.06003C22.0005 7.73242 21.9205 7.40971 21.7671 7.12026C21.6136 6.83081 21.3914 6.58349 21.12 6.40003Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 22V14L2.25 9.15M10 14 21.77 7.13", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M21.12 6.40003L15.07 2.34003C14.7515 2.1237 14.3773 2.00391 13.9924 1.99504C13.6074 1.98617 13.2281 2.0886 12.9 2.29003L2.95 8.41003C2.65992 8.58896 2.42038 8.83906 2.25411 9.13659C2.08785 9.43412 2.00038 9.7692 2 10.11V15.93C1.99951 16.2576 2.0795 16.5803 2.23294 16.8698C2.38639 17.1592 2.60858 17.4066 2.88 17.59L8.93 21.66C9.24852 21.8764 9.6227 21.9961 10.0076 22.005C10.3926 22.0139 10.7719 21.9115 11.1 21.71L21.05 15.59C21.3401 15.4111 21.5796 15.161 21.7459 14.8635C21.9122 14.5659 21.9996 14.2309 22 13.89V8.06003C22.0005 7.73242 21.9205 7.40971 21.7671 7.12026C21.6136 6.83081 21.3914 6.58349 21.12 6.40003Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M10 22V14L2.25 9.15M10 14 21.77 7.13", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`Cuboid doesn't support ${type}`);
    return null;
});
exports.Cuboid.displayName = "Cuboid";
exports.Cuboid.metadata = {
    name: "Cuboid",
    category: "stroke/shapes",
    tags: ["cuboid", "icon"],
    description: "Cuboid icon from stroke/shapes category",
    type: ["stroke", "icon"],
};
exports.default = exports.Cuboid;
