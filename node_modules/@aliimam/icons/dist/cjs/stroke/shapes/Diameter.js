"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Diameter = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Diameter = React.forwardRef(function Diameter({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M19 21C20.105 21 21 20.105 21 19 21 17.895 20.105 17 19 17 17.895 17 17 17.895 17 19 17 20.105 17.895 21 19 21ZM5 7C6.105 7 7 6.105 7 5 7 3.895 6.105 3 5 3 3.895 3 3 3.895 3 5 3 6.105 3.895 7 5 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.48 3.66C8.403 2.385 10.708 1.815 13.003 2.045 15.299 2.276 17.444 3.293 19.076 4.924 20.707 6.556 21.724 8.701 21.955 10.997 22.185 13.292 21.615 15.597 20.34 17.52M6.41 6.41 17.59 17.59M3.66 6.48C2.386 8.403 1.815 10.708 2.046 13.003 2.276 15.299 3.293 17.444 4.925 19.076 6.556 20.707 8.701 21.724 10.997 21.955 13.293 22.185 15.597 21.615 17.52 20.34", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M19 21C20.105 21 21 20.105 21 19 21 17.895 20.105 17 19 17 17.895 17 17 17.895 17 19 17 20.105 17.895 21 19 21ZM5 7C6.105 7 7 6.105 7 5 7 3.895 6.105 3 5 3 3.895 3 3 3.895 3 5 3 6.105 3.895 7 5 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.48 3.66C8.403 2.385 10.708 1.815 13.003 2.045 15.299 2.276 17.444 3.293 19.076 4.924 20.707 6.556 21.724 8.701 21.955 10.997 22.185 13.292 21.615 15.597 20.34 17.52M6.41 6.41 17.59 17.59M3.66 6.48C2.386 8.403 1.815 10.708 2.046 13.003 2.276 15.299 3.293 17.444 4.925 19.076 6.556 20.707 8.701 21.724 10.997 21.955 13.293 22.185 15.597 21.615 17.52 20.34", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M19 21C20.105 21 21 20.105 21 19 21 17.895 20.105 17 19 17 17.895 17 17 17.895 17 19 17 20.105 17.895 21 19 21ZM5 7C6.105 7 7 6.105 7 5 7 3.895 6.105 3 5 3 3.895 3 3 3.895 3 5 3 6.105 3.895 7 5 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.48 3.66C8.403 2.385 10.708 1.815 13.003 2.045 15.299 2.276 17.444 3.293 19.076 4.924 20.707 6.556 21.724 8.701 21.955 10.997 22.185 13.292 21.615 15.597 20.34 17.52M6.41 6.41 17.59 17.59M3.66 6.48C2.385 8.403 1.815 10.708 2.045 13.003 2.276 15.299 3.293 17.444 4.924 19.076 6.556 20.707 8.701 21.724 10.997 21.955 13.292 22.185 15.597 21.615 17.52 20.34", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M19 21C20.105 21 21 20.105 21 19 21 17.895 20.105 17 19 17 17.895 17 17 17.895 17 19 17 20.105 17.895 21 19 21ZM5 7C6.105 7 7 6.105 7 5 7 3.895 6.105 3 5 3 3.895 3 3 3.895 3 5 3 6.105 3.895 7 5 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.48 3.66C8.403 2.385 10.708 1.815 13.003 2.045 15.299 2.276 17.444 3.293 19.076 4.924 20.707 6.556 21.724 8.701 21.955 10.997 22.185 13.292 21.615 15.597 20.34 17.52M6.41 6.41 17.59 17.59M3.66 6.48C2.385 8.403 1.815 10.708 2.045 13.003 2.276 15.299 3.293 17.444 4.924 19.076 6.556 20.707 8.701 21.724 10.997 21.955 13.292 22.185 15.597 21.615 17.52 20.34", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`Diameter doesn't support ${type}`);
    return null;
});
exports.Diameter.displayName = "Diameter";
exports.Diameter.metadata = {
    name: "Diameter",
    category: "stroke/shapes",
    tags: ["diameter", "icon"],
    description: "Diameter icon from stroke/shapes category",
    type: ["stroke", "icon"],
};
exports.default = exports.Diameter;
