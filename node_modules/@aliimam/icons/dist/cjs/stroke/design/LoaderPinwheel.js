"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoaderPinwheel = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.LoaderPinwheel = React.forwardRef(function LoaderPinwheel({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, ...props }, forwardedRef) {
    return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M22 12C22 13.3261 21.4732 14.5979 20.5355 15.5355C19.5979 16.4732 18.3261 17 17 17C15.6739 17 14.4021 16.4732 13.4645 15.5355C12.5268 14.5979 12 13.3261 12 12C12 10.6739 11.4732 9.40215 10.5355 8.46447C9.59785 7.52678 8.32608 7 7 7C5.67392 7 4.40215 7.52678 3.46447 8.46447C2.52678 9.40215 2 10.6739 2 12", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.9999 20.7C5.84621 20.037 5.00316 18.9428 4.65622 17.6582C4.30928 16.3735 4.48686 15.0037 5.1499 13.85C5.81294 12.6963 6.90713 11.8533 8.19175 11.5063C9.47638 11.1594 10.8462 11.337 11.9999 12C12.5646 12.3283 13.1884 12.5422 13.8357 12.6294C14.4831 12.7166 15.1413 12.6755 15.7727 12.5084C16.4041 12.3412 16.9965 12.0513 17.5159 11.6553C18.0353 11.2592 18.4716 10.7647 18.7999 10.2C19.1282 9.63534 19.3421 9.01152 19.4293 8.36418C19.5165 7.71685 19.4754 7.05867 19.3082 6.42723C19.1411 5.79579 18.8512 5.20346 18.4551 4.68405C18.0591 4.16464 17.5646 3.72833 16.9999 3.40002", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M7 3.30004C8.14043 2.637 9.49754 2.45415 10.7728 2.79172C12.048 3.12928 13.137 3.95961 13.8 5.10004C14.463 6.24047 14.6459 7.59759 14.3083 8.87284C13.9708 10.1481 13.1404 11.237 12 11.9C10.8596 12.5631 10.0292 13.652 9.69167 14.9273C9.35411 16.2025 9.53696 17.5596 10.2 18.7C10.863 19.8405 11.952 20.6708 13.2272 21.0084C14.5025 21.3459 15.8596 21.1631 17 20.5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
});
exports.LoaderPinwheel.displayName = "LoaderPinwheel";
exports.LoaderPinwheel.metadata = {
    name: "LoaderPinwheel",
    category: "stroke/design",
    tags: ["loader", "pinwheel", "icon"],
    description: "LoaderPinwheel icon from stroke/design category",
    type: ["stroke", "icon"],
};
exports.default = exports.LoaderPinwheel;
