"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Brain = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Brain = React.forwardRef(function Brain({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M12 18V5M15 13C14.135 12.747 13.375 12.221 12.834 11.5 12.293 10.778 12.001 9.901 12 9 12 9.901 11.707 10.778 11.166 11.5 10.625 12.221 9.865 12.747 9 13M17.598 6.5C17.828 6.101 17.964 5.655 17.994 5.196 18.024 4.737 17.948 4.277 17.772 3.852 17.596 3.427 17.324 3.048 16.978 2.744 16.632 2.441 16.221 2.221 15.777 2.102 15.332 1.983 14.866 1.968 14.415 2.057 13.963 2.147 13.539 2.34 13.174 2.62 12.809 2.9 12.513 3.26 12.309 3.673 12.106 4.086 12 4.54 12 5 12 4.54 11.894 4.086 11.691 3.673 11.487 3.26 11.191 2.9 10.826 2.62 10.461 2.34 10.037 2.147 9.585 2.057 9.134 1.968 8.668 1.983 8.224 2.102 7.779 2.221 7.368 2.441 7.022 2.744 6.676 3.048 6.404 3.427 6.228 3.852 6.052 4.277 5.976 4.737 6.006 5.196 6.037 5.655 6.172 6.101 6.402 6.5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M17.9971 5.125C18.5849 5.27614 19.1306 5.55905 19.5928 5.95231C20.0551 6.34557 20.4218 6.83887 20.6652 7.39485C20.9086 7.95082 21.0223 8.55489 20.9977 9.16131C20.9731 9.76773 20.8108 10.3606 20.5231 10.895", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M18 17.9999C18.8805 17.9998 19.7364 17.7093 20.4349 17.1733C21.1335 16.6372 21.6356 15.8857 21.8635 15.0352C22.0914 14.1847 22.0323 13.2827 21.6954 12.4693C21.3585 11.6558 20.7625 10.9762 20 10.5359", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M19.967 17.4829C20.0371 18.0251 19.9953 18.576 19.8441 19.1014C19.693 19.6269 19.4357 20.1157 19.0882 20.5379C18.7407 20.96 18.3104 21.3064 17.8238 21.5557C17.3372 21.805 16.8046 21.9518 16.259 21.9872C15.7134 22.0227 15.1664 21.9458 14.6516 21.7615C14.1369 21.5772 13.6654 21.2893 13.2662 20.9157C12.8671 20.542 12.5488 20.0905 12.331 19.589C12.1132 19.0875 12.0006 18.5467 12 17.9999C11.9994 18.5467 11.8867 19.0875 11.669 19.589C11.4512 20.0905 11.1329 20.542 10.7338 20.9157C10.3346 21.2893 9.86313 21.5772 9.34838 21.7615C8.83364 21.9458 8.28657 22.0227 7.74097 21.9872C7.19537 21.9518 6.66283 21.805 6.17622 21.5557C5.68961 21.3064 5.25927 20.96 4.91178 20.5379C4.56429 20.1157 4.30703 19.6269 4.15589 19.1014C4.00474 18.576 3.96291 18.0251 4.033 17.4829", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M5.99983 17.9999C5.11932 17.9998 4.26343 17.7093 3.56489 17.1733C2.86635 16.6372 2.3642 15.8857 2.1363 15.0352C1.90841 14.1847 1.96751 13.2827 2.30444 12.4693C2.64137 11.6558 3.23731 10.9762 3.99983 10.5359", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.00293 5.125C5.41513 5.27614 4.86943 5.55905 4.40716 5.95231C3.94489 6.34557 3.57817 6.83887 3.33477 7.39485C3.09138 7.95082 2.97769 8.55489 3.00232 9.16131C3.02695 9.76773 3.18925 10.3606 3.47693 10.895", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M12 18V5M15 13C14.135 12.747 13.375 12.221 12.834 11.5 12.293 10.778 12.001 9.901 12 9 12 9.901 11.707 10.778 11.166 11.5 10.625 12.221 9.865 12.747 9 13M17.598 6.5C17.828 6.102 17.964 5.655 17.994 5.196 18.024 4.737 17.948 4.277 17.772 3.852 17.596 3.427 17.324 3.048 16.978 2.744 16.632 2.441 16.221 2.221 15.777 2.102 15.332 1.983 14.866 1.968 14.415 2.058 13.963 2.147 13.539 2.34 13.174 2.62 12.809 2.9 12.513 3.26 12.309 3.673 12.106 4.086 12 4.54 12 5 12 4.54 11.894 4.086 11.691 3.673 11.487 3.26 11.191 2.9 10.826 2.62 10.461 2.34 10.037 2.147 9.585 2.058 9.134 1.968 8.668 1.983 8.224 2.102 7.779 2.221 7.368 2.441 7.022 2.744 6.676 3.048 6.404 3.427 6.228 3.852 6.052 4.277 5.976 4.737 6.006 5.196 6.037 5.655 6.172 6.102 6.402 6.5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M17.9971 5.125C18.5849 5.27614 19.1306 5.55905 19.5928 5.95231C20.0551 6.34557 20.4218 6.83887 20.6652 7.39485C20.9086 7.95082 21.0223 8.55489 20.9977 9.16131C20.9731 9.76773 20.8108 10.3606 20.5231 10.895", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M18 18C18.8805 18 19.7364 17.7094 20.4349 17.1734C21.1335 16.6373 21.6356 15.8858 21.8635 15.0353C22.0914 14.1848 22.0323 13.2829 21.6954 12.4694C21.3585 11.6559 20.7625 10.9763 20 10.536", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M19.967 17.483C20.0371 18.0253 19.9953 18.5761 19.8441 19.1016C19.693 19.627 19.4357 20.1159 19.0882 20.538C18.7407 20.9601 18.3104 21.3065 17.8238 21.5558C17.3372 21.8051 16.8046 21.952 16.259 21.9874C15.7134 22.0228 15.1664 21.946 14.6516 21.7616C14.1369 21.5773 13.6654 21.2895 13.2662 20.9158C12.8671 20.5421 12.5488 20.0906 12.331 19.5891C12.1132 19.0876 12.0006 18.5468 12 18C11.9994 18.5468 11.8867 19.0876 11.669 19.5891C11.4512 20.0906 11.1329 20.5421 10.7338 20.9158C10.3346 21.2895 9.86313 21.5773 9.34838 21.7616C8.83364 21.946 8.28657 22.0228 7.74097 21.9874C7.19537 21.952 6.66283 21.8051 6.17622 21.5558C5.68961 21.3065 5.25927 20.9601 4.91178 20.538C4.56429 20.1159 4.30703 19.627 4.15589 19.1016C4.00474 18.5761 3.96291 18.0253 4.033 17.483", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.00007 18C5.11957 18 4.26368 17.7094 3.56514 17.1734C2.8666 16.6373 2.36444 15.8858 2.13655 15.0353C1.90865 14.1848 1.96775 13.2829 2.30469 12.4694C2.64162 11.6559 3.23755 10.9763 4.00007 10.536", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M6.00293 5.125C5.41513 5.27614 4.86943 5.55905 4.40716 5.95231C3.94489 6.34557 3.57817 6.83887 3.33477 7.39485C3.09138 7.95082 2.97769 8.55489 3.00232 9.16131C3.02695 9.76773 3.18925 10.3606 3.47693 10.895", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`Brain doesn't support ${type}`);
    return null;
});
exports.Brain.displayName = "Brain";
exports.Brain.metadata = {
    name: "Brain",
    category: "stroke/science",
    tags: ["brain", "icon"],
    description: "Brain icon from stroke/science category",
    type: ["stroke", "icon"],
};
exports.default = exports.Brain;
