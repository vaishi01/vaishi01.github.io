"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Turtle = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Turtle = React.forwardRef(function Turtle({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, ...props }, forwardedRef) {
    return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M12 10 14 14V17C14 17.265 14.105 17.52 14.293 17.707 14.48 17.895 14.735 18 15 18H17C17.265 18 17.52 17.895 17.707 17.707 17.895 17.52 18 17.265 18 17V14C18 11.878 17.157 9.843 15.657 8.343 14.157 6.843 12.122 6 10 6 7.878 6 5.843 6.843 4.343 8.343 2.843 9.843 2 11.878 2 14V17C2 17.265 2.105 17.52 2.293 17.707 2.48 17.895 2.735 18 3 18H5C5.265 18 5.52 17.895 5.707 17.707 5.895 17.52 6 17.265 6 17V14L8 10H12ZM4.82 7.9 8 10M15.18 7.9 12 10", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M16.93 10H20C20.5304 10 21.0391 10.2107 21.4142 10.5858C21.7893 10.9609 22 11.4696 22 12C22 12.5304 21.7893 13.0391 21.4142 13.4142C21.0391 13.7893 20.5304 14 20 14H2", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
});
exports.Turtle.displayName = "Turtle";
exports.Turtle.metadata = {
    name: "Turtle",
    category: "stroke/animals",
    tags: ["turtle", "icon"],
    description: "Turtle icon from stroke/animals category",
    type: ["stroke", "icon"],
};
exports.default = exports.Turtle;
