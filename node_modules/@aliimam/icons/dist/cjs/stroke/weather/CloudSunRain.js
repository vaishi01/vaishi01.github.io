"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudSunRain = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.CloudSunRain = React.forwardRef(function CloudSunRain({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, ...props }, forwardedRef) {
    return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 2V4M4.93 4.93 6.34 6.34M20 12H22M19.07 4.93 17.66 6.34M15.947 12.65C16.07 11.904 15.979 11.139 15.686 10.443 15.392 9.747 14.907 9.148 14.287 8.716 13.667 8.284 12.937 8.037 12.183 8.003 11.428 7.968 10.679 8.148 10.022 8.522M3 20C2.551 19.4 2.242 18.707 2.096 17.972 1.951 17.236 1.973 16.478 2.16 15.752 2.348 15.026 2.696 14.352 3.179 13.779 3.662 13.206 4.268 12.749 4.952 12.441 5.635 12.134 6.38 11.984 7.129 12.004 7.878 12.023 8.614 12.21 9.281 12.552 9.948 12.893 10.53 13.381 10.983 13.978 11.437 14.574 11.75 15.266 11.9 16H13C13.609 15.999 14.203 16.183 14.704 16.528 15.206 16.873 15.59 17.362 15.807 17.93 16.024 18.499 16.063 19.12 15.919 19.711 15.775 20.302 15.454 20.835 15 21.24M11 20V22M7 19V21", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
});
exports.CloudSunRain.displayName = "CloudSunRain";
exports.CloudSunRain.metadata = {
    name: "CloudSunRain",
    category: "stroke/weather",
    tags: ["cloud", "sun", "rain", "icon"],
    description: "CloudSunRain icon from stroke/weather category",
    type: ["stroke", "icon"],
};
exports.default = exports.CloudSunRain;
