"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrowBigRightDash = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.ArrowBigRightDash = React.forwardRef(function ArrowBigRightDash({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M11 9C11.265 9 11.52 8.895 11.707 8.707 11.895 8.52 12 8.265 12 8V5.061C11.956 4.835 11.991 4.6 12.1 4.396 12.21 4.193 12.386 4.034 12.599 3.946 12.812 3.857 13.049 3.845 13.27 3.912 13.491 3.979 13.682 4.12 13.811 4.311L20.647 11.147C20.759 11.259 20.848 11.392 20.909 11.539 20.969 11.685 21.001 11.842 21.001 12.001 21.001 12.159 20.969 12.316 20.909 12.462 20.848 12.609 20.759 12.742 20.647 12.854L13.811 19.689C13.682 19.88 13.491 20.021 13.27 20.088 13.049 20.155 12.812 20.143 12.599 20.054 12.386 19.966 12.21 19.807 12.1 19.604 11.991 19.4 11.956 19.166 12 18.939V16C12 15.735 11.895 15.48 11.707 15.293 11.52 15.105 11.265 15 11 15H9C8.735 15 8.48 14.895 8.293 14.707 8.105 14.52 8 14.265 8 14V10C8 9.735 8.105 9.48 8.293 9.293 8.48 9.105 8.735 9 9 9H11ZM4 9V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M11 9C11.265 9 11.52 8.895 11.707 8.707 11.895 8.52 12 8.265 12 8V5.061C11.956 4.835 11.991 4.6 12.1 4.396 12.21 4.193 12.386 4.034 12.599 3.946 12.812 3.857 13.049 3.845 13.27 3.912 13.491 3.979 13.682 4.12 13.811 4.311L20.647 11.147C20.759 11.259 20.848 11.392 20.909 11.539 20.969 11.685 21.001 11.842 21.001 12.001 21.001 12.159 20.969 12.316 20.909 12.462 20.848 12.609 20.759 12.742 20.647 12.854L13.811 19.689C13.682 19.88 13.491 20.021 13.27 20.088 13.049 20.155 12.812 20.143 12.599 20.054 12.386 19.966 12.21 19.807 12.1 19.604 11.991 19.4 11.956 19.166 12 18.939V16C12 15.735 11.895 15.48 11.707 15.293 11.52 15.105 11.265 15 11 15H9C8.735 15 8.48 14.895 8.293 14.707 8.105 14.52 8 14.265 8 14V10C8 9.735 8.105 9.48 8.293 9.293 8.48 9.105 8.735 9 9 9H11ZM4 9V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M11 9C11.265 9 11.52 8.895 11.707 8.707 11.895 8.519 12 8.265 12 8V5.061C11.956 4.834 11.991 4.6 12.1 4.396 12.21 4.193 12.386 4.034 12.599 3.945 12.812 3.857 13.049 3.845 13.27 3.912 13.491 3.979 13.682 4.119 13.811 4.311L20.647 11.147C20.759 11.259 20.848 11.392 20.909 11.539 20.969 11.685 21.001 11.842 21.001 12 21.001 12.159 20.969 12.316 20.909 12.462 20.848 12.609 20.759 12.742 20.647 12.854L13.811 19.689C13.682 19.88 13.491 20.021 13.27 20.088 13.049 20.154 12.812 20.143 12.599 20.054 12.386 19.966 12.21 19.807 12.1 19.603 11.991 19.4 11.956 19.165 12 18.939V16C12 15.735 11.895 15.48 11.707 15.293 11.52 15.105 11.265 15 11 15H9C8.735 15 8.48 14.895 8.293 14.707 8.105 14.52 8 14.265 8 14V10C8 9.735 8.105 9.48 8.293 9.293 8.48 9.105 8.735 9 9 9H11ZM4 9V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`ArrowBigRightDash doesn't support ${type}`);
    return null;
});
exports.ArrowBigRightDash.displayName = "ArrowBigRightDash";
exports.ArrowBigRightDash.metadata = {
    name: "ArrowBigRightDash",
    category: "stroke/navigation",
    tags: ["arrow", "big", "right", "dash", "icon"],
    description: "ArrowBigRightDash icon from stroke/navigation category",
    type: ["stroke", "icon"],
};
exports.default = exports.ArrowBigRightDash;
