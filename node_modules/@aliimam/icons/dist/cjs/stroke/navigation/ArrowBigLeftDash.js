"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrowBigLeftDash = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.ArrowBigLeftDash = React.forwardRef(function ArrowBigLeftDash({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M13 9C12.735 9 12.481 8.895 12.293 8.707 12.105 8.52 12 8.265 12 8V5.061C12.044 4.835 12.009 4.6 11.9 4.396 11.79 4.193 11.614 4.034 11.401 3.946 11.188 3.857 10.951 3.845 10.73 3.912 10.509 3.979 10.318 4.12 10.189 4.311L3.354 11.147C3.242 11.259 3.153 11.392 3.092 11.539 3.032 11.685 3 11.842 3 12.001 3 12.159 3.032 12.316 3.092 12.462 3.153 12.609 3.242 12.742 3.354 12.854L10.189 19.689C10.318 19.88 10.509 20.021 10.73 20.088 10.951 20.155 11.188 20.143 11.401 20.054 11.614 19.966 11.79 19.807 11.9 19.604 12.009 19.4 12.044 19.166 12 18.939V16C12 15.735 12.105 15.48 12.293 15.293 12.481 15.105 12.735 15 13 15H15C15.265 15 15.52 14.895 15.707 14.707 15.895 14.52 16 14.265 16 14V10C16 9.735 15.895 9.48 15.707 9.293 15.52 9.105 15.265 9 15 9H13ZM20 9V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M13 9C12.735 9 12.481 8.895 12.293 8.707 12.105 8.52 12 8.265 12 8V5.061C12.044 4.835 12.009 4.6 11.9 4.396 11.79 4.193 11.614 4.034 11.401 3.946 11.188 3.857 10.951 3.845 10.73 3.912 10.509 3.979 10.318 4.12 10.189 4.311L3.354 11.147C3.242 11.259 3.153 11.392 3.092 11.539 3.032 11.685 3 11.842 3 12.001 3 12.159 3.032 12.316 3.092 12.462 3.153 12.609 3.242 12.742 3.354 12.854L10.189 19.689C10.318 19.88 10.509 20.021 10.73 20.088 10.951 20.155 11.188 20.143 11.401 20.054 11.614 19.966 11.79 19.807 11.9 19.604 12.009 19.4 12.044 19.166 12 18.939V16C12 15.735 12.105 15.48 12.293 15.293 12.481 15.105 12.735 15 13 15H15C15.265 15 15.52 14.895 15.707 14.707 15.895 14.52 16 14.265 16 14V10C16 9.735 15.895 9.48 15.707 9.293 15.52 9.105 15.265 9 15 9H13ZM20 9V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M13 9C12.735 9 12.48 8.895 12.293 8.707 12.105 8.519 12 8.265 12 8V5.061C12.044 4.834 12.009 4.6 11.9 4.396 11.79 4.193 11.614 4.034 11.401 3.945 11.188 3.857 10.951 3.845 10.73 3.912 10.509 3.979 10.318 4.119 10.189 4.311L3.354 11.147C3.242 11.259 3.153 11.392 3.092 11.539 3.032 11.685 3 11.842 3 12 3 12.159 3.032 12.316 3.092 12.462 3.153 12.609 3.242 12.742 3.354 12.854L10.189 19.689C10.318 19.88 10.509 20.021 10.73 20.088 10.951 20.154 11.188 20.143 11.401 20.054 11.614 19.966 11.79 19.807 11.9 19.603 12.009 19.4 12.044 19.165 12 18.939V16C12 15.735 12.105 15.48 12.293 15.293 12.48 15.105 12.735 15 13 15H15C15.265 15 15.52 14.895 15.707 14.707 15.895 14.52 16 14.265 16 14V10C16 9.735 15.895 9.48 15.707 9.293 15.52 9.105 15.265 9 15 9H13ZM20 9V15", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`ArrowBigLeftDash doesn't support ${type}`);
    return null;
});
exports.ArrowBigLeftDash.displayName = "ArrowBigLeftDash";
exports.ArrowBigLeftDash.metadata = {
    name: "ArrowBigLeftDash",
    category: "stroke/navigation",
    tags: ["arrow", "big", "left", "dash", "icon"],
    description: "ArrowBigLeftDash icon from stroke/navigation category",
    type: ["stroke", "icon"],
};
exports.default = exports.ArrowBigLeftDash;
