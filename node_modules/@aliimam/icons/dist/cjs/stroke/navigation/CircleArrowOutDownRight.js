"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CircleArrowOutDownRight = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.CircleArrowOutDownRight = React.forwardRef(function CircleArrowOutDownRight({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 22C10.022 22 8.089 21.414 6.444 20.315 4.8 19.216 3.518 17.654 2.761 15.827 2.004 14 1.806 11.989 2.192 10.049 2.578 8.109 3.53 6.327 4.929 4.929 6.327 3.53 8.109 2.578 10.049 2.192 11.989 1.806 14 2.004 15.827 2.761 17.654 3.518 19.216 4.8 20.315 6.444 21.414 8.089 22 10.022 22 12M22 22 12 12M22 16V22H16", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 22C10.022 22 8.089 21.414 6.444 20.315 4.8 19.216 3.518 17.654 2.761 15.827 2.004 14 1.806 11.989 2.192 10.049 2.578 8.109 3.53 6.327 4.929 4.929 6.327 3.53 8.109 2.578 10.049 2.192 11.989 1.806 14 2.004 15.827 2.761 17.654 3.518 19.216 4.8 20.315 6.444 21.414 8.089 22 10.022 22 12M22 22 12 12M22 16V22H16", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`CircleArrowOutDownRight doesn't support ${type}`);
    return null;
});
exports.CircleArrowOutDownRight.displayName = "CircleArrowOutDownRight";
exports.CircleArrowOutDownRight.metadata = {
    name: "CircleArrowOutDownRight",
    category: "stroke/navigation",
    tags: ["circle", "arrow", "out", "down", "right", "icon"],
    description: "CircleArrowOutDownRight icon from stroke/navigation category",
    type: ["stroke", "icon"],
};
exports.default = exports.CircleArrowOutDownRight;
