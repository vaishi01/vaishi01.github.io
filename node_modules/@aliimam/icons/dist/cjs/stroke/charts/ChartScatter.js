"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChartScatter = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.ChartScatter = React.forwardRef(function ChartScatter({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, ...props }, forwardedRef) {
    return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M7.5 8C7.776 8 8 7.776 8 7.5 8 7.224 7.776 7 7.5 7 7.224 7 7 7.224 7 7.5 7 7.776 7.224 8 7.5 8ZM18.5 6C18.776 6 19 5.776 19 5.5 19 5.224 18.776 5 18.5 5 18.224 5 18 5.224 18 5.5 18 5.776 18.224 6 18.5 6ZM11.5 12C11.776 12 12 11.776 12 11.5 12 11.224 11.776 11 11.5 11 11.224 11 11 11.224 11 11.5 11 11.776 11.224 12 11.5 12ZM7.5 17C7.776 17 8 16.776 8 16.5 8 16.224 7.776 16 7.5 16 7.224 16 7 16.224 7 16.5 7 16.776 7.224 17 7.5 17ZM17.5 15C17.776 15 18 14.776 18 14.5 18 14.224 17.776 14 17.5 14 17.224 14 17 14.224 17 14.5 17 14.776 17.224 15 17.5 15Z", fill: "currentColor", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M3 3V19C3 19.5304 3.21071 20.0391 3.58579 20.4142C3.96086 20.7893 4.46957 21 5 21H21", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
});
exports.ChartScatter.displayName = "ChartScatter";
exports.ChartScatter.metadata = {
    name: "ChartScatter",
    category: "stroke/charts",
    tags: ["chart", "scatter", "icon"],
    description: "ChartScatter icon from stroke/charts category",
    type: ["stroke", "icon"],
};
exports.default = exports.ChartScatter;
