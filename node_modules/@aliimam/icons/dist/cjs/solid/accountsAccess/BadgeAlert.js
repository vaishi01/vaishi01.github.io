"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BadgeAlert = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.BadgeAlert = React.forwardRef(function BadgeAlert({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "solid") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 2.00488C12.6714 2.00488 13.332 2.17369 13.9209 2.49609C14.5098 2.81853 15.0084 3.28401 15.3701 3.84961C16.0282 3.70168 16.7135 3.72335 17.3613 3.91113C18.0091 4.09897 18.5993 4.44692 19.0762 4.92383C19.5531 5.40074 19.901 5.9909 20.0889 6.63867C20.2767 7.28654 20.2983 7.97177 20.1504 8.62988C20.716 8.99158 21.1815 9.49023 21.5039 10.0791C21.8263 10.668 21.9951 11.3286 21.9951 12C21.9951 12.6714 21.8263 13.332 21.5039 13.9209C21.1815 14.5098 20.716 15.0084 20.1504 15.3701C20.2977 16.0271 20.2761 16.7107 20.0889 17.3574C19.9015 18.0043 19.5538 18.5936 19.0781 19.0703C18.6024 19.547 18.0137 19.8963 17.3672 20.085C16.7208 20.2735 16.0372 20.2963 15.3799 20.1504C15.0187 20.7181 14.5195 21.1859 13.9297 21.5098C13.3399 21.8335 12.6777 22.0029 12.0049 22.0029C11.332 22.0029 10.6699 21.8335 10.0801 21.5098C9.49021 21.1859 8.99111 20.7181 8.62988 20.1504C7.97288 20.2977 7.28932 20.2761 6.64258 20.0889C5.9957 19.9015 5.4064 19.5538 4.92969 19.0781C4.45297 18.6024 4.10374 18.0137 3.91504 17.3672C3.72646 16.7208 3.70368 16.0372 3.84961 15.3799C3.27971 15.0191 2.81065 14.5196 2.48535 13.9287C2.16008 13.3378 1.98926 12.6745 1.98926 12C1.98926 11.3254 2.15999 10.6613 2.48535 10.0703C2.81064 9.47968 3.27987 8.98076 3.84961 8.62012C3.70365 7.96264 3.72634 7.27834 3.91504 6.63184C4.10377 5.98549 4.45307 5.3975 4.92969 4.92188C5.40641 4.44616 5.99569 4.09848 6.64258 3.91113C7.28932 3.72388 7.97288 3.70235 8.62988 3.84961C8.99158 3.284 9.49022 2.81853 10.0791 2.49609C10.668 2.17369 11.3286 2.00488 12 2.00488ZM12 14.5C11.1716 14.5 10.5 15.1716 10.5 16C10.5 16.8284 11.1716 17.5 12 17.5H12.0098C12.8382 17.5 13.5098 16.8284 13.5098 16C13.5098 15.1716 12.8382 14.5 12.0098 14.5H12ZM12 6.5C11.1716 6.5 10.5 7.17157 10.5 8V12C10.5 12.8284 11.1716 13.5 12 13.5C12.8284 13.5 13.5 12.8284 13.5 12V8C13.5 7.17157 12.8284 6.5 12 6.5Z", fill: "currentColor" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M3.85 8.62C3.704 7.963 3.726 7.279 3.915 6.632 4.104 5.986 4.453 5.397 4.929 4.922 5.406 4.446 5.995 4.098 6.642 3.911 7.289 3.724 7.973 3.703 8.63 3.85 8.992 3.284 9.49 2.819 10.079 2.496 10.668 2.174 11.329 2.005 12 2.005 12.671 2.005 13.332 2.174 13.921 2.496 14.51 2.819 15.008 3.284 15.37 3.85 16.028 3.702 16.713 3.723 17.361 3.911 18.009 4.098 18.599 4.447 19.076 4.924 19.553 5.401 19.901 5.991 20.089 6.639 20.277 7.287 20.298 7.972 20.15 8.63 20.716 8.992 21.181 9.49 21.504 10.079 21.826 10.668 21.995 11.329 21.995 12 21.995 12.671 21.826 13.332 21.504 13.921 21.181 14.51 20.716 15.008 20.15 15.37 20.297 16.027 20.276 16.711 20.089 17.358 19.902 18.005 19.554 18.594 19.078 19.071 18.603 19.547 18.014 19.896 17.368 20.085 16.721 20.274 16.037 20.296 15.38 20.15 15.019 20.718 14.52 21.185 13.93 21.509 13.34 21.833 12.678 22.003 12.005 22.003 11.332 22.003 10.67 21.833 10.08 21.509 9.49 21.185 8.991 20.718 8.63 20.15 7.973 20.297 7.289 20.276 6.642 20.089 5.995 19.902 5.406 19.554 4.929 19.078 4.453 18.603 4.104 18.014 3.915 17.368 3.726 16.721 3.704 16.037 3.85 15.38 3.28 15.019 2.81 14.52 2.485 13.929 2.16 13.338 1.989 12.675 1.989 12 1.989 11.325 2.16 10.662 2.485 10.071 2.81 9.48 3.28 8.981 3.85 8.62ZM12 8V12M12 16H12.01", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M3.85 8.62C3.704 7.963 3.726 7.279 3.915 6.632 4.104 5.986 4.453 5.398 4.929 4.922 5.406 4.446 5.995 4.098 6.642 3.911 7.289 3.724 7.973 3.703 8.63 3.85 8.992 3.284 9.49 2.819 10.079 2.496 10.668 2.174 11.329 2.005 12 2.005 12.672 2.005 13.332 2.174 13.921 2.496 14.51 2.819 15.008 3.284 15.37 3.85 16.028 3.702 16.713 3.723 17.361 3.911 18.009 4.099 18.599 4.447 19.076 4.924 19.553 5.401 19.902 5.991 20.089 6.639 20.277 7.287 20.298 7.972 20.15 8.63 20.716 8.992 21.181 9.49 21.504 10.079 21.826 10.668 21.995 11.329 21.995 12 21.995 12.672 21.826 13.332 21.504 13.921 21.181 14.51 20.716 15.008 20.15 15.37 20.297 16.027 20.276 16.711 20.089 17.358 19.902 18.005 19.554 18.594 19.078 19.071 18.603 19.547 18.014 19.896 17.368 20.085 16.721 20.274 16.038 20.296 15.38 20.15 15.019 20.718 14.52 21.186 13.93 21.509 13.34 21.833 12.678 22.003 12.005 22.003 11.332 22.003 10.67 21.833 10.08 21.509 9.49 21.186 8.991 20.718 8.63 20.15 7.973 20.297 7.289 20.277 6.642 20.089 5.995 19.902 5.406 19.554 4.929 19.078 4.453 18.603 4.104 18.014 3.915 17.368 3.726 16.721 3.704 16.038 3.85 15.38 3.28 15.019 2.81 14.52 2.485 13.929 2.16 13.338 1.989 12.675 1.989 12 1.989 11.326 2.16 10.662 2.485 10.071 2.81 9.48 3.28 8.981 3.85 8.62ZM12 8V12M12 16H12.01", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`BadgeAlert doesn't support ${type}`);
    return null;
});
exports.BadgeAlert.displayName = "BadgeAlert";
exports.BadgeAlert.metadata = {
    name: "BadgeAlert",
    category: "solid/accountsAccess",
    tags: ["badge", "alert", "icon"],
    description: "BadgeAlert icon from solid/accountsAccess category",
    type: ["stroke", "icon"],
};
exports.default = exports.BadgeAlert;
