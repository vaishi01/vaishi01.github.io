"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bell = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.Bell = React.forwardRef(function Bell({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "solid") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12.433 20.25C12.847 19.533 13.764 19.287 14.482 19.701 15.199 20.115 15.445 21.033 15.031 21.75 14.724 22.282 14.281 22.724 13.749 23.031 13.218 23.338 12.614 23.5 12 23.5 11.386 23.5 10.782 23.338 10.25 23.031 9.718 22.724 9.276 22.282 8.969 21.75 8.555 21.033 8.801 20.115 9.518 19.701 10.235 19.287 11.153 19.533 11.567 20.25 11.611 20.326 11.674 20.389 11.75 20.433 11.826 20.476 11.913 20.5 12 20.5 12.088 20.5 12.175 20.476 12.25 20.433 12.326 20.389 12.389 20.326 12.433 20.25ZM3.262 15.326C3.131 15.469 3.045 15.647 3.014 15.839 2.983 16.03 3.008 16.226 3.086 16.403 3.164 16.581 3.292 16.732 3.454 16.838 3.617 16.943 3.806 17 4 17H20C20.194 17 20.383 16.944 20.546 16.838 20.708 16.732 20.837 16.582 20.915 16.405 20.993 16.227 21.019 16.031 20.987 15.84 20.956 15.649 20.87 15.47 20.74 15.327 19.41 13.956 18 12.499 18 8 18 6.409 17.368 4.883 16.243 3.757 15.117 2.632 13.591 2 12 2 10.409 2 8.883 2.632 7.757 3.757 6.632 4.883 6 6.409 6 8 6 12.499 4.589 13.956 3.262 15.326Z", fill: "currentColor" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M10.268 21C10.444 21.304 10.696 21.557 11 21.732 11.304 21.908 11.649 22 12 22 12.351 22 12.696 21.908 13 21.732 13.304 21.557 13.557 21.304 13.732 21M3.262 15.326C3.131 15.469 3.045 15.647 3.014 15.839 2.983 16.03 3.008 16.226 3.086 16.403 3.164 16.581 3.292 16.732 3.454 16.838 3.617 16.943 3.806 17 4 17H20C20.194 17 20.383 16.944 20.546 16.838 20.708 16.732 20.837 16.582 20.915 16.405 20.993 16.227 21.019 16.031 20.987 15.84 20.956 15.649 20.87 15.47 20.74 15.327 19.41 13.956 18 12.499 18 8 18 6.409 17.368 4.883 16.243 3.757 15.117 2.632 13.591 2 12 2 10.409 2 8.883 2.632 7.757 3.757 6.632 4.883 6 6.409 6 8 6 12.499 4.589 13.956 3.262 15.326Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M10.268 21C10.444 21.304 10.696 21.557 11 21.732 11.304 21.908 11.649 22 12 22 12.351 22 12.696 21.908 13 21.732 13.304 21.557 13.557 21.304 13.732 21M3.262 15.326C3.131 15.469 3.045 15.647 3.014 15.839 2.983 16.03 3.008 16.226 3.086 16.403 3.164 16.581 3.292 16.732 3.454 16.838 3.617 16.943 3.806 17 4 17H20C20.194 17 20.383 16.944 20.546 16.838 20.708 16.732 20.837 16.582 20.915 16.405 20.993 16.227 21.019 16.031 20.987 15.84 20.956 15.649 20.87 15.47 20.74 15.327 19.41 13.956 18 12.499 18 8 18 6.409 17.368 4.883 16.243 3.757 15.117 2.632 13.591 2 12 2 10.409 2 8.883 2.632 7.757 3.757 6.632 4.883 6 6.409 6 8 6 12.499 4.589 13.956 3.262 15.326Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`Bell doesn't support ${type}`);
    return null;
});
exports.Bell.displayName = "Bell";
exports.Bell.metadata = {
    name: "Bell",
    category: "solid/accountsAccess",
    tags: ["bell", "icon"],
    description: "Bell icon from solid/accountsAccess category",
    type: ["stroke", "icon"],
};
exports.default = exports.Bell;
