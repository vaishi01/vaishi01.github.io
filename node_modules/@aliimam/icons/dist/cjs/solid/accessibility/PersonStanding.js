"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PersonStanding = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.PersonStanding = React.forwardRef(function PersonStanding({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "solid") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M17.5254 6.57715C18.3112 6.31522 19.1607 6.73972 19.4228 7.5254C19.6848 8.31121 19.2603 9.16077 18.4746 9.42286L13.5 11.0811V13.6455L16.3418 19.3291C16.7123 20.0701 16.4119 20.9713 15.6709 21.3418C14.93 21.7121 14.0286 21.4118 13.6582 20.6709L12 17.3545L10.3418 20.6709C9.97125 21.4118 9.07 21.7123 8.32907 21.3418C7.58827 20.9713 7.28779 20.07 7.65816 19.3291L10.5 13.6455V11.0811L5.52535 9.42286C4.73978 9.16069 4.31524 8.31112 4.5771 7.5254C4.83916 6.73974 5.68881 6.31537 6.47457 6.57715L12 8.41895L17.5254 6.57715ZM12 2.5C13.3807 2.5 14.5 3.61929 14.5 5C14.5 6.38072 13.3807 7.50001 12 7.50001C10.6194 7.49987 9.49997 6.38063 9.49997 5C9.49997 3.61937 10.6194 2.50013 12 2.5Z", fill: "currentColor" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 6C12.552 6 13 5.552 13 5 13 4.448 12.552 4 12 4 11.448 4 11 4.448 11 5 11 5.552 11.448 6 12 6ZM9 20 12 14 15 20M6 8 12 10 18 8M12 10V14", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsx)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: (0, jsx_runtime_1.jsx)("path", { d: "M12 6C12.552 6 13 5.552 13 5 13 4.448 12.552 4 12 4 11.448 4 11 4.448 11 5 11 5.552 11.448 6 12 6ZM9 20 12 14 15 20M6 8 12 10 18 8M12 10V14", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`PersonStanding doesn't support ${type}`);
    return null;
});
exports.PersonStanding.displayName = "PersonStanding";
exports.PersonStanding.metadata = {
    name: "PersonStanding",
    category: "solid/accessibility",
    tags: ["person", "standing", "icon"],
    description: "PersonStanding icon from solid/accessibility category",
    type: ["stroke", "icon"],
};
exports.default = exports.PersonStanding;
