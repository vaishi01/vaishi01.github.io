"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LifeBuoy = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
exports.LifeBuoy = React.forwardRef(function LifeBuoy({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "solid") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("g", { clipPath: "url(#undefined-clip0_70_3497)", children: (0, jsx_runtime_1.jsx)("path", { d: "M12 0.5C18.3513 0.5 23.5 5.64873 23.5 12C23.5 18.3513 18.3513 23.5 12 23.5C5.64873 23.5 0.5 18.3513 0.5 12C0.5 5.64873 5.64873 0.5 12 0.5ZM14.6807 16.8018C13.8874 17.2456 12.9736 17.5 12 17.5C11.0261 17.5 10.1118 17.2458 9.31836 16.8018L7.14551 18.9746C8.52213 19.9346 10.1945 20.5 12 20.5C13.8053 20.5 15.477 19.9343 16.8535 18.9746L14.6807 16.8018ZM5.02441 7.14551C4.06465 8.52205 3.5 10.1947 3.5 12C3.5 13.8051 4.06493 15.4771 5.02441 16.8535L7.19727 14.6807C6.75359 13.8875 6.5 12.9735 6.5 12C6.5 11.0262 6.75333 10.1117 7.19727 9.31836L5.02441 7.14551ZM16.8018 9.31836C17.2458 10.1118 17.5 11.0261 17.5 12C17.5 12.9736 17.2456 13.8874 16.8018 14.6807L18.9746 16.8535C19.9343 15.477 20.5 13.8053 20.5 12C20.5 10.1945 19.9346 8.52213 18.9746 7.14551L16.8018 9.31836ZM12 3.5C10.1947 3.5 8.52205 4.06465 7.14551 5.02441L9.31836 7.19727C10.1117 6.75333 11.0262 6.5 12 6.5C12.9735 6.5 13.8875 6.75359 14.6807 7.19727L16.8535 5.02441C15.4771 4.06493 13.8051 3.5 12 3.5Z", fill: "currentColor" }) }), (0, jsx_runtime_1.jsx)("defs", { children: (0, jsx_runtime_1.jsx)("clipPath", { id: "undefined-clip0_70_3497", children: (0, jsx_runtime_1.jsx)("path", { fill: "#fff", d: "M0 0H24V24H0z" }) }) })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M12 22C17.523 22 22 17.523 22 12 22 6.477 17.523 2 12 2 6.477 2 2 6.477 2 12 2 17.523 6.477 22 12 22ZM4.93 4.93 9.17 9.17M14.83 9.17 19.07 4.93M14.83 14.83 19.07 19.07M9.17 14.83 4.93 19.07", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return ((0, jsx_runtime_1.jsxs)("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [(0, jsx_runtime_1.jsx)("path", { d: "M12 22C17.523 22 22 17.523 22 12 22 6.477 17.523 2 12 2 6.477 2 2 6.477 2 12 2 17.523 6.477 22 12 22ZM4.93 4.93 9.17 9.17M14.83 9.17 19.07 4.93M14.83 14.83 19.07 19.07M9.17 14.83 4.93 19.07", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), (0, jsx_runtime_1.jsx)("path", { d: "M12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`LifeBuoy doesn't support ${type}`);
    return null;
});
exports.LifeBuoy.displayName = "LifeBuoy";
exports.LifeBuoy.metadata = {
    name: "LifeBuoy",
    category: "solid/accessibility",
    tags: ["life", "buoy", "icon"],
    description: "LifeBuoy icon from solid/accessibility category",
    type: ["stroke", "icon"],
};
exports.default = exports.LifeBuoy;
