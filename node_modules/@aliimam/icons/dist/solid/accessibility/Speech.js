import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
export const Speech = React.forwardRef(function Speech({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "solid") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M7.3 20V15.9C7.3 15.475 7.481 15.07 7.797 14.785 8.113 14.501 8.534 14.364 8.957 14.408L10.692 14.591C10.856 14.566 11.01 14.495 11.13 14.378 11.261 14.251 11.342 14.081 11.364 13.9V8.293C11.369 7.25 10.96 6.248 10.226 5.507 9.492 4.766 8.493 4.348 7.45 4.343 6.407 4.338 5.405 4.748 4.664 5.482 3.923 6.216 3.505 7.214 3.5 8.257 3.501 9.519 3.646 10.111 3.789 10.526 3.879 10.785 3.958 10.955 4.094 11.3 4.216 11.609 4.345 11.971 4.452 12.426 4.745 13.564 4.758 14.757 4.489 15.902L3.461 20.338C3.274 21.145 2.468 21.648 1.661 21.461.854 21.274.352 20.468.539 19.661L1.567 15.22 1.568 15.215C1.726 14.543 1.719 13.843 1.547 13.174 1.544 13.162 1.541 13.149 1.538 13.136 1.475 12.861 1.398 12.641 1.304 12.404 1.22 12.193 1.071 11.844.953 11.503.682 10.717.5 9.784.5 8.25V8.243L.51 7.9C.603 6.187 1.328 4.564 2.553 3.351 3.859 2.057 5.625 1.335 7.464 1.343 9.302 1.351 11.062 2.09 12.356 3.396 13.649 4.7 14.371 6.464 14.364 8.3V14C14.364 14.043 14.362 14.086 14.358 14.128 14.28 15.04 13.876 15.893 13.219 16.531 12.562 17.168 11.697 17.547 10.783 17.598 10.703 17.602 10.623 17.6 10.543 17.592L10.3 17.566V20C10.3 20.829 9.628 21.5 8.8 21.5 7.972 21.5 7.3 20.829 7.3 20ZM18.743 6.135C19.33 5.55 20.279 5.551 20.864 6.137 22.55 7.826 23.497 10.114 23.496 12.5 23.496 14.886 22.548 17.174 20.861 18.861 20.275 19.447 19.325 19.447 18.739 18.861 18.154 18.275 18.154 17.325 18.739 16.739 19.864 15.614 20.496 14.089 20.496 12.499L20.489 12.201C20.416 10.719 19.795 9.312 18.741 8.257 18.156 7.67 18.157 6.721 18.743 6.135Z", fill: "currentColor" }), _jsx("path", { d: "M15.9037 8.97521C16.4835 8.38353 17.4331 8.37392 18.0248 8.95373C18.4969 9.4163 18.8727 9.96811 19.1303 10.5768C19.3877 11.1853 19.5224 11.8389 19.5258 12.4996C19.5291 13.1605 19.4012 13.8161 19.1498 14.4274C18.8984 15.0385 18.5283 15.5939 18.0609 16.0611C17.4751 16.6469 16.5246 16.646 15.9389 16.0602C15.3535 15.4743 15.3541 14.5247 15.9398 13.9391C16.1267 13.7522 16.2749 13.5301 16.3754 13.2858C16.4759 13.0414 16.5271 12.7794 16.5258 12.5152C16.5244 12.251 16.4705 11.9891 16.3676 11.7457C16.2646 11.5022 16.114 11.2813 15.9252 11.0963C15.3335 10.5165 15.3239 9.5669 15.9037 8.97521Z", fill: "currentColor" })] }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M8.8 20V15.9L10.7 16.1C11.253 16.069 11.777 15.84 12.174 15.454 12.572 15.068 12.817 14.552 12.864 14V8.3C12.871 6.859 12.305 5.475 11.291 4.452 10.277 3.428 8.898 2.85 7.457 2.843 6.016 2.836 4.632 3.402 3.609 4.416 2.585 5.43 2.007 6.809 2 8.25 2 11.05 2.656 11.304 3 12.8 3.232 13.703 3.242 14.65 3.029 15.558L2 20M19.8 17.8C21.206 16.394 21.996 14.487 21.996 12.499 21.997 10.511 21.208 8.604 19.803 7.197M17 15C17.327 14.673 17.586 14.284 17.762 13.856 17.938 13.429 18.028 12.97 18.025 12.507 18.023 12.045 17.929 11.587 17.749 11.161 17.568 10.735 17.305 10.349 16.975 10.025", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M8.8 20V15.9L10.7 16.1C11.253 16.069 11.777 15.84 12.174 15.454 12.572 15.068 12.817 14.552 12.864 14V8.3C12.871 6.859 12.305 5.475 11.291 4.452 10.277 3.428 8.898 2.85 7.457 2.843 6.016 2.836 4.632 3.402 3.609 4.416 2.585 5.43 2.007 6.809 2 8.25 2 11.05 2.656 11.304 3 12.8 3.232 13.703 3.242 14.65 3.029 15.558L2 20M19.8 17.8C21.206 16.394 21.996 14.487 21.996 12.499 21.997 10.511 21.208 8.604 19.803 7.197M17 15C17.327 14.673 17.586 14.284 17.762 13.856 17.938 13.429 18.028 12.97 18.025 12.507 18.023 12.045 17.929 11.587 17.749 11.161 17.568 10.735 17.306 10.349 16.975 10.025", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`Speech doesn't support ${type}`);
    return null;
});
Speech.displayName = "Speech";
Speech.metadata = {
    name: "Speech",
    category: "solid/accessibility",
    tags: ["speech", "icon"],
    description: "Speech icon from solid/accessibility category",
    type: ["stroke", "icon"],
};
export default Speech;
