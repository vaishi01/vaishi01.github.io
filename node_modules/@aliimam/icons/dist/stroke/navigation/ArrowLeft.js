import { jsx as _jsx } from "react/jsx-runtime";
import * as React from "react";
export const ArrowLeft = React.forwardRef(function ArrowLeft({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M12 19 5 12 12 5M19 12H5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M12 19 5 12 12 5M19 12H5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`ArrowLeft doesn't support ${type}`);
    return null;
});
ArrowLeft.displayName = "ArrowLeft";
ArrowLeft.metadata = {
    name: "ArrowLeft",
    category: "stroke/navigation",
    tags: ["arrow", "left", "icon"],
    description: "ArrowLeft icon from stroke/navigation category",
    type: ["stroke", "icon"],
};
export default ArrowLeft;
