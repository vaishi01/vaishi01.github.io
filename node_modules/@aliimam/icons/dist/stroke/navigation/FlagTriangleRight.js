import { jsx as _jsx } from "react/jsx-runtime";
import * as React from "react";
export const FlagTriangleRight = React.forwardRef(function FlagTriangleRight({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M6 22V2.79997C5.99988 2.66238 6.03525 2.52709 6.10268 2.40716C6.17012 2.28723 6.26735 2.18672 6.38497 2.11535C6.50259 2.04397 6.63664 2.00413 6.77416 1.99969C6.91167 1.99524 7.04801 2.02634 7.17 2.08997L18.55 7.77997C18.6853 7.84548 18.7993 7.94776 18.8791 8.0751C18.959 8.20244 19.0013 8.34969 19.0013 8.49997C19.0013 8.65026 18.959 8.7975 18.8791 8.92484C18.7993 9.05218 18.6853 9.15446 18.55 9.21997L6 15.5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M6 22V2.79997C5.99988 2.66238 6.03525 2.52709 6.10268 2.40716C6.17012 2.28723 6.26735 2.18672 6.38497 2.11535C6.50259 2.04397 6.63664 2.00413 6.77416 1.99969C6.91167 1.99524 7.04801 2.02634 7.17 2.08997L18.55 7.77997C18.6853 7.84548 18.7993 7.94776 18.8791 8.0751C18.959 8.20244 19.0013 8.34969 19.0013 8.49997C19.0013 8.65026 18.959 8.7975 18.8791 8.92484C18.7993 9.05218 18.6853 9.15446 18.55 9.21997L6 15.5", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`FlagTriangleRight doesn't support ${type}`);
    return null;
});
FlagTriangleRight.displayName = "FlagTriangleRight";
FlagTriangleRight.metadata = {
    name: "FlagTriangleRight",
    category: "stroke/navigation",
    tags: ["flag", "triangle", "right", "icon"],
    description: "FlagTriangleRight icon from stroke/navigation category",
    type: ["stroke", "icon"],
};
export default FlagTriangleRight;
