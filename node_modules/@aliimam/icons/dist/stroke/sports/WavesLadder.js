import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
export const WavesLadder = React.forwardRef(function WavesLadder({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M19 5C18.4696 5 17.9609 5.21071 17.5858 5.58579C17.2107 5.96086 17 6.46957 17 7V18", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M2 18C2.6 18.5 3.2 19 4.5 19 7 19 7 17 9.5 17 12.1 17 11.9 19 14.5 19 17 19 17 17 19.5 17 20.8 17 21.4 17.5 22 18M7 13H17M7 9H17", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M9 5C8.46957 5 7.96086 5.21071 7.58579 5.58579C7.21071 5.96086 7 6.46957 7 7V18", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M19 5C18.4696 5 17.9609 5.21071 17.5858 5.58579C17.2107 5.96086 17 6.46957 17 7V18", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M2 18C2.6 18.5 3.2 19 4.5 19 7 19 7 17 9.5 17 12.1 17 11.9 19 14.5 19 17 19 17 17 19.5 17 20.8 17 21.4 17.5 22 18M7 13H17M7 9H17", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M9 5C8.46957 5 7.96086 5.21071 7.58579 5.58579C7.21071 5.96086 7 6.46957 7 7V18", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`WavesLadder doesn't support ${type}`);
    return null;
});
WavesLadder.displayName = "WavesLadder";
WavesLadder.metadata = {
    name: "WavesLadder",
    category: "stroke/sports",
    tags: ["waves", "ladder", "icon"],
    description: "WavesLadder icon from stroke/sports category",
    type: ["stroke", "icon"],
};
export default WavesLadder;
