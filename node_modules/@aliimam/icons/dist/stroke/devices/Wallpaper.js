import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
export const Wallpaper = React.forwardRef(function Wallpaper({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M12 17V21M8 21H16M9 17 15.1 10.9C15.476 10.532 15.981 10.327 16.507 10.328 17.033 10.33 17.537 10.539 17.91 10.91L22 15M8 11C9.105 11 10 10.105 10 9 10 7.895 9.105 7 8 7 6.895 7 6 7.895 6 9 6 10.105 6.895 11 8 11Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M20 3H4C2.89543 3 2 3.89543 2 5V15C2 16.1046 2.89543 17 4 17H20C21.1046 17 22 16.1046 22 15V5C22 3.89543 21.1046 3 20 3Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M12 17V21M8 21H16M9 17 15.1 10.9C15.476 10.532 15.981 10.327 16.507 10.328 17.033 10.33 17.537 10.539 17.91 10.91L22 15M8 11C9.105 11 10 10.105 10 9 10 7.895 9.105 7 8 7 6.895 7 6 7.895 6 9 6 10.105 6.895 11 8 11Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M20 3H4C2.89543 3 2 3.89543 2 5V15C2 16.1046 2.89543 17 4 17H20C21.1046 17 22 16.1046 22 15V5C22 3.89543 21.1046 3 20 3Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`Wallpaper doesn't support ${type}`);
    return null;
});
Wallpaper.displayName = "Wallpaper";
Wallpaper.metadata = {
    name: "Wallpaper",
    category: "stroke/devices",
    tags: ["wallpaper", "icon"],
    description: "Wallpaper icon from stroke/devices category",
    type: ["stroke", "icon"],
};
export default Wallpaper;
