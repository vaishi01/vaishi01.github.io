import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
export const ListTree = React.forwardRef(function ListTree({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M8 5H21M13 12H21M13 19H21M3 10C3 10.53 3.211 11.039 3.586 11.414 3.961 11.789 4.47 12 5 12H8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M3 5V17C3 17.5304 3.21071 18.0391 3.58579 18.4142C3.96086 18.7893 4.46957 19 5 19H8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M8 5H21M13 12H21M13 19H21M3 10C3 10.53 3.211 11.039 3.586 11.414 3.961 11.789 4.47 12 5 12H8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M3 5V17C3 17.5304 3.21071 18.0391 3.58579 18.4142C3.96086 18.7893 4.46957 19 5 19H8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M8 5H21M13 12H21M13 19H21M3 10C3 10.53 3.211 11.039 3.586 11.414 3.961 11.789 4.47 12 5 12H8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M3 5V17C3 17.5304 3.21071 18.0391 3.58579 18.4142C3.96086 18.7893 4.46957 19 5 19H8", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`ListTree doesn't support ${type}`);
    return null;
});
ListTree.displayName = "ListTree";
ListTree.metadata = {
    name: "ListTree",
    category: "stroke/textFormatting",
    tags: ["list", "tree", "icon"],
    description: "ListTree icon from stroke/textFormatting category",
    type: ["stroke", "icon"],
};
export default ListTree;
