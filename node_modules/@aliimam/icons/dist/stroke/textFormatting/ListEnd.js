import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
export const ListEnd = React.forwardRef(function ListEnd({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M16 5H3M16 12H3M9 19H3M16 16 13 19 16 22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M21 5V17C21 17.5304 20.7893 18.0391 20.4142 18.4142C20.0391 18.7893 19.5304 19 19 19H13", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M16 5H3M16 12H3M9 19H3M16 16 13 19 16 22", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M21 5V17C21 17.5304 20.7893 18.0391 20.4142 18.4142C20.0391 18.7893 19.5304 19 19 19H13", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`ListEnd doesn't support ${type}`);
    return null;
});
ListEnd.displayName = "ListEnd";
ListEnd.metadata = {
    name: "ListEnd",
    category: "stroke/textFormatting",
    tags: ["list", "end", "icon"],
    description: "ListEnd icon from stroke/textFormatting category",
    type: ["stroke", "icon"],
};
export default ListEnd;
