import { jsx as _jsx } from "react/jsx-runtime";
import * as React from "react";
export const HeartMinus = React.forwardRef(function HeartMinus({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M14.876 18.99 13.508 20.313C13.322 20.527 13.092 20.699 12.834 20.817 12.576 20.936 12.296 20.998 12.012 21 11.729 21.001 11.448 20.943 11.188 20.828 10.929 20.713 10.697 20.544 10.508 20.332L5 15C3.5 13.5 2 11.8 2 9.5 2 8.387 2.338 7.301 2.968 6.384 3.599 5.467 4.493 4.763 5.532 4.364 6.571 3.966 7.706 3.892 8.788 4.153 9.87 4.414 10.847 4.996 11.591 5.824 11.643 5.88 11.707 5.925 11.777 5.955 11.847 5.986 11.923 6.001 12 6.001 12.077 6.001 12.153 5.986 12.223 5.955 12.293 5.925 12.357 5.88 12.409 5.824 13.15 4.991 14.128 4.403 15.212 4.14 16.295 3.876 17.434 3.948 18.475 4.347 19.516 4.747 20.411 5.453 21.041 6.374 21.671 7.294 22.005 8.385 22 9.5 22 10.033 21.918 10.564 21.756 11.072M15 15H21", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M14.876 18.99 13.508 20.313C13.322 20.527 13.092 20.699 12.834 20.817 12.576 20.936 12.296 20.998 12.012 21 11.729 21.001 11.448 20.943 11.188 20.828 10.929 20.713 10.697 20.544 10.508 20.332L5 15C3.5 13.5 2 11.8 2 9.5 2 8.387 2.338 7.301 2.968 6.384 3.599 5.467 4.493 4.763 5.532 4.364 6.571 3.966 7.706 3.892 8.788 4.153 9.87 4.414 10.847 4.996 11.591 5.824 11.643 5.88 11.707 5.925 11.777 5.955 11.847 5.986 11.923 6.001 12 6.001 12.077 6.001 12.153 5.986 12.223 5.955 12.293 5.925 12.357 5.88 12.409 5.824 13.15 4.991 14.128 4.403 15.212 4.14 16.295 3.876 17.434 3.948 18.475 4.347 19.516 4.747 20.411 5.453 21.041 6.374 21.671 7.294 22.005 8.385 22 9.5 22 10.033 21.918 10.564 21.756 11.072M15 15H21", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M14.876 18.99 13.508 20.313C13.322 20.527 13.092 20.699 12.834 20.817 12.576 20.936 12.296 20.998 12.012 21 11.729 21.002 11.448 20.943 11.188 20.828 10.929 20.713 10.697 20.544 10.508 20.332L5 15C3.5 13.5 2 11.8 2 9.5 2 8.387 2.338 7.301 2.968 6.384 3.599 5.467 4.493 4.763 5.532 4.364 6.571 3.966 7.706 3.892 8.788 4.153 9.87 4.414 10.847 4.996 11.591 5.824 11.643 5.88 11.707 5.925 11.777 5.955 11.847 5.986 11.923 6.002 12 6.002 12.077 6.002 12.153 5.986 12.223 5.955 12.293 5.925 12.357 5.88 12.409 5.824 13.15 4.991 14.128 4.403 15.212 4.14 16.295 3.876 17.434 3.948 18.475 4.348 19.516 4.747 20.411 5.453 21.041 6.374 21.671 7.294 22.005 8.385 22 9.5 22 10.034 21.918 10.564 21.756 11.072M15 15H21", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M14.876 18.99 13.508 20.313C13.322 20.527 13.092 20.699 12.834 20.817 12.576 20.936 12.296 20.998 12.012 21 11.729 21.001 11.448 20.943 11.188 20.828 10.929 20.713 10.697 20.544 10.508 20.332L5 15C3.5 13.5 2 11.8 2 9.5 2 8.387 2.338 7.301 2.968 6.384 3.599 5.467 4.493 4.763 5.532 4.364 6.571 3.966 7.706 3.892 8.788 4.153 9.87 4.414 10.847 4.996 11.591 5.824 11.643 5.88 11.707 5.925 11.777 5.955 11.847 5.986 11.923 6.001 12 6.001 12.077 6.001 12.153 5.986 12.223 5.955 12.293 5.925 12.357 5.88 12.409 5.824 13.15 4.991 14.128 4.403 15.212 4.14 16.295 3.876 17.434 3.948 18.475 4.347 19.516 4.747 20.411 5.453 21.041 6.374 21.671 7.294 22.005 8.385 22 9.5 22 10.033 21.918 10.564 21.756 11.072M15 15H21", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M14.876 18.99 13.508 20.313C13.322 20.527 13.092 20.699 12.834 20.817 12.576 20.936 12.296 20.998 12.012 21 11.729 21.002 11.448 20.943 11.188 20.828 10.929 20.713 10.697 20.544 10.508 20.332L5 15C3.5 13.5 2 11.8 2 9.5 2 8.387 2.338 7.301 2.968 6.384 3.599 5.467 4.493 4.763 5.532 4.364 6.571 3.966 7.706 3.892 8.788 4.153 9.87 4.414 10.847 4.996 11.591 5.824 11.643 5.88 11.707 5.925 11.777 5.955 11.847 5.986 11.923 6.002 12 6.002 12.077 6.002 12.153 5.986 12.223 5.955 12.293 5.925 12.357 5.88 12.409 5.824 13.15 4.991 14.128 4.403 15.212 4.14 16.295 3.876 17.434 3.948 18.475 4.348 19.516 4.747 20.411 5.453 21.041 6.374 21.671 7.294 22.005 8.385 22 9.5 22 10.034 21.918 10.564 21.756 11.072M15 15H21", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`HeartMinus doesn't support ${type}`);
    return null;
});
HeartMinus.displayName = "HeartMinus";
HeartMinus.metadata = {
    name: "HeartMinus",
    category: "stroke/social",
    tags: ["heart", "minus", "icon"],
    description: "HeartMinus icon from stroke/social category",
    type: ["stroke", "icon"],
};
export default HeartMinus;
