import { jsx as _jsx } from "react/jsx-runtime";
import * as React from "react";
export const Tv = React.forwardRef(function Tv({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M17 2 12 7 7 2M20 7H4C2.895 7 2 7.895 2 9V20C2 21.105 2.895 22 4 22H20C21.105 22 22 21.105 22 20V9C22 7.895 21.105 7 20 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M17 2 12 7 7 2M20 7H4C2.895 7 2 7.895 2 9V20C2 21.105 2.895 22 4 22H20C21.105 22 22 21.105 22 20V9C22 7.895 21.105 7 20 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    if (type === "stroke") {
        return (_jsx("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: _jsx("path", { d: "M17 2 12 7 7 2M20 7H4C2.895 7 2 7.895 2 9V20C2 21.105 2.895 22 4 22H20C21.105 22 22 21.105 22 20V9C22 7.895 21.105 7 20 7Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }) }));
    }
    console.error(`Tv doesn't support ${type}`);
    return null;
});
Tv.displayName = "Tv";
Tv.metadata = {
    name: "Tv",
    category: "stroke/multimedia",
    tags: ["tv", "icon"],
    description: "Tv icon from stroke/multimedia category",
    type: ["stroke", "icon"],
};
export default Tv;
