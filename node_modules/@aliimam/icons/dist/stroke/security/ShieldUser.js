import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
export const ShieldUser = React.forwardRef(function ShieldUser({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M20 13C20 18 16.5 20.5 12.34 21.95C12.1222 22.0238 11.8855 22.0202 11.67 21.94C7.5 20.5 4 18 4 13V5.99996C4 5.73474 4.10536 5.48039 4.29289 5.29285C4.48043 5.10532 4.73478 4.99996 5 4.99996C7 4.99996 9.5 3.79996 11.24 2.27996C11.4519 2.09896 11.7214 1.99951 12 1.99951C12.2786 1.99951 12.5481 2.09896 12.76 2.27996C14.51 3.80996 17 4.99996 19 4.99996C19.2652 4.99996 19.5196 5.10532 19.7071 5.29285C19.8946 5.48039 20 5.73474 20 5.99996V13Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M6.376 18.91C6.803 17.762 7.57 16.772 8.576 16.074 9.582 15.375 10.777 15 12.002 15.001 13.226 15.001 14.421 15.376 15.427 16.075 16.432 16.775 17.199 17.765 17.625 18.913M12 15C14.209 15 16 13.209 16 11 16 8.791 14.209 7 12 7 9.791 7 8 8.791 8 11 8 13.209 9.791 15 12 15Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M20 13C20 18 16.5 20.5 12.34 21.95C12.1222 22.0238 11.8855 22.0202 11.67 21.94C7.5 20.5 4 18 4 13V5.99996C4 5.73474 4.10536 5.48039 4.29289 5.29285C4.48043 5.10532 4.73478 4.99996 5 4.99996C7 4.99996 9.5 3.79996 11.24 2.27996C11.4519 2.09896 11.7214 1.99951 12 1.99951C12.2786 1.99951 12.5481 2.09896 12.76 2.27996C14.51 3.80996 17 4.99996 19 4.99996C19.2652 4.99996 19.5196 5.10532 19.7071 5.29285C19.8946 5.48039 20 5.73474 20 5.99996V13Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M6.376 18.91C6.803 17.762 7.57 16.772 8.576 16.074 9.582 15.375 10.777 15 12.002 15.001 13.226 15.001 14.421 15.376 15.427 16.075 16.432 16.775 17.199 17.765 17.625 18.913M12 15C14.209 15 16 13.209 16 11 16 8.791 14.209 7 12 7 9.791 7 8 8.791 8 11 8 13.209 9.791 15 12 15Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M20 13C20 18 16.5 20.5 12.34 21.95C12.1222 22.0238 11.8855 22.0202 11.67 21.94C7.5 20.5 4 18 4 13V5.99996C4 5.73474 4.10536 5.48039 4.29289 5.29285C4.48043 5.10532 4.73478 4.99996 5 4.99996C7 4.99996 9.5 3.79996 11.24 2.27996C11.4519 2.09896 11.7214 1.99951 12 1.99951C12.2786 1.99951 12.5481 2.09896 12.76 2.27996C14.51 3.80996 17 4.99996 19 4.99996C19.2652 4.99996 19.5196 5.10532 19.7071 5.29285C19.8946 5.48039 20 5.73474 20 5.99996V13Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M6.376 18.91C6.803 17.762 7.57 16.772 8.576 16.074 9.582 15.375 10.777 15 12.002 15.001 13.226 15.001 14.421 15.376 15.427 16.075 16.432 16.775 17.199 17.765 17.625 18.913M12 15C14.209 15 16 13.209 16 11 16 8.791 14.209 7 12 7 9.791 7 8 8.791 8 11 8 13.209 9.791 15 12 15Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`ShieldUser doesn't support ${type}`);
    return null;
});
ShieldUser.displayName = "ShieldUser";
ShieldUser.metadata = {
    name: "ShieldUser",
    category: "stroke/security",
    tags: ["shield", "user", "icon"],
    description: "ShieldUser icon from stroke/security category",
    type: ["stroke", "icon"],
};
export default ShieldUser;
