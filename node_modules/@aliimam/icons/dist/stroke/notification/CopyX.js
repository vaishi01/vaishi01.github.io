import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from "react";
export const CopyX = React.forwardRef(function CopyX({ color = "currentColor", fill, size = 24, strokeWidth, strokeLinecap, strokeLinejoin, strokeDasharray, opacity, className, type = "stroke", ...props }, forwardedRef) {
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M12 12 18 18M12 18 18 12M20 8H10C8.895 8 8 8.895 8 10V20C8 21.105 8.895 22 10 22H20C21.105 22 22 21.105 22 20V10C22 8.895 21.105 8 20 8Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M4 16C2.9 16 2 15.1 2 14V4C2 2.9 2.9 2 4 2H14C15.1 2 16 2.9 16 4", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    if (type === "stroke") {
        return (_jsxs("svg", { width: size, height: size, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", className: className, strokeWidth: strokeWidth, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, strokeDasharray: strokeDasharray, opacity: opacity, ...props, ref: forwardedRef, children: [_jsx("path", { d: "M12 12 18 18M12 18 18 12M20 8H10C8.895 8 8 8.895 8 10V20C8 21.105 8.895 22 10 22H20C21.105 22 22 21.105 22 20V10C22 8.895 21.105 8 20 8Z", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" }), _jsx("path", { d: "M4 16C2.9 16 2 15.1 2 14V4C2 2.9 2.9 2 4 2H14C15.1 2 16 2.9 16 4", stroke: color, strokeLinecap: "round", strokeLinejoin: "round" })] }));
    }
    console.error(`CopyX doesn't support ${type}`);
    return null;
});
CopyX.displayName = "CopyX";
CopyX.metadata = {
    name: "CopyX",
    category: "stroke/notification",
    tags: ["copy", "icon"],
    description: "CopyX icon from stroke/notification category",
    type: ["stroke", "icon"],
};
export default CopyX;
